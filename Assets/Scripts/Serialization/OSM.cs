// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: OSM.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Transidious.Serialization.OSM {

  /// <summary>Holder for reflection information generated from OSM.proto</summary>
  public static partial class OSMReflection {

    #region Descriptor
    /// <summary>File descriptor for OSM.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OSMReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglPU00ucHJvdG8SHVRyYW5zaWRpb3VzLlNlcmlhbGl6YXRpb24uT1NNGgxD",
            "b21tb24ucHJvdG8aDkJ1aWxkaW5nLnByb3RvGgxTdHJlZXQucHJvdG8aFE5h",
            "dHVyYWxGZWF0dXJlLnByb3RvGg1UcmFuc2l0LnByb3RvIuMBCgZPc21HZW8S",
            "CgoCaWQYASABKAQSOAoEdHlwZRgCIAEoDjIqLlRyYW5zaWRpb3VzLlNlcmlh",
            "bGl6YXRpb24uT1NNLk9zbUdlby5UeXBlEj0KBHRhZ3MYAyADKAsyLy5UcmFu",
            "c2lkaW91cy5TZXJpYWxpemF0aW9uLk9TTS5Pc21HZW8uVGFnc0VudHJ5GisK",
            "CVRhZ3NFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIicK",
            "BFR5cGUSCAoETm9kZRAAEgcKA1dheRABEgwKCFJlbGF0aW9uEAIicAoETm9k",
            "ZRIyCgNnZW8YASABKAsyJS5UcmFuc2lkaW91cy5TZXJpYWxpemF0aW9uLk9T",
            "TS5Pc21HZW8SNAoIcG9zaXRpb24YAiABKAsyIi5UcmFuc2lkaW91cy5TZXJp",
            "YWxpemF0aW9uLlZlY3RvcjIiSAoDV2F5EjIKA2dlbxgBIAEoCzIlLlRyYW5z",
            "aWRpb3VzLlNlcmlhbGl6YXRpb24uT1NNLk9zbUdlbxINCgVub2RlcxgCIAMo",
            "BCLdAQoIUmVsYXRpb24SMgoDZ2VvGAEgASgLMiUuVHJhbnNpZGlvdXMuU2Vy",
            "aWFsaXphdGlvbi5PU00uT3NtR2VvEj8KB21lbWJlcnMYAiADKAsyLi5UcmFu",
            "c2lkaW91cy5TZXJpYWxpemF0aW9uLk9TTS5SZWxhdGlvbi5NZW1iZXIaXAoG",
            "TWVtYmVyEjgKBHR5cGUYASABKA4yKi5UcmFuc2lkaW91cy5TZXJpYWxpemF0",
            "aW9uLk9TTS5Pc21HZW8uVHlwZRIKCgJpZBgCIAEoBBIMCgRyb2xlGAMgASgJ",
            "IvEGCgRBcmVhEjIKBW5vZGVzGAEgAygLMiMuVHJhbnNpZGlvdXMuU2VyaWFs",
            "aXphdGlvbi5PU00uTm9kZRIwCgR3YXlzGAIgAygLMiIuVHJhbnNpZGlvdXMu",
            "U2VyaWFsaXphdGlvbi5PU00uV2F5EjoKCXJlbGF0aW9ucxgDIAMoCzInLlRy",
            "YW5zaWRpb3VzLlNlcmlhbGl6YXRpb24uT1NNLlJlbGF0aW9uEhAKCGJvdW5k",
            "YXJ5GAQgASgEEjsKB3N0cmVldHMYBSADKAsyKi5UcmFuc2lkaW91cy5TZXJp",
            "YWxpemF0aW9uLk9TTS5BcmVhLlN0cmVldBJECghmZWF0dXJlcxgGIAMoCzIy",
            "LlRyYW5zaWRpb3VzLlNlcmlhbGl6YXRpb24uT1NNLkFyZWEuTmF0dXJhbEZl",
            "YXR1cmUSPwoJYnVpbGRpbmdzGAcgAygLMiwuVHJhbnNpZGlvdXMuU2VyaWFs",
            "aXphdGlvbi5PU00uQXJlYS5CdWlsZGluZxI+CgVsaW5lcxgIIAMoCzIvLlRy",
            "YW5zaWRpb3VzLlNlcmlhbGl6YXRpb24uT1NNLkFyZWEuVHJhbnNpdExpbmUS",
            "DAoEbWluWBgJIAEoAhIMCgRtYXhYGAogASgCEgwKBG1pblkYCyABKAISDAoE",
            "bWF4WRgMIAEoAhpNCgZTdHJlZXQSDQoFd2F5SWQYASABKAQSNAoEdHlwZRgC",
            "IAEoDjImLlRyYW5zaWRpb3VzLlNlcmlhbGl6YXRpb24uU3RyZWV0LlR5cGUa",
            "XQoOTmF0dXJhbEZlYXR1cmUSDQoFZ2VvSWQYASABKAQSPAoEdHlwZRgCIAEo",
            "DjIuLlRyYW5zaWRpb3VzLlNlcmlhbGl6YXRpb24uTmF0dXJhbEZlYXR1cmUu",
            "VHlwZRpRCghCdWlsZGluZxINCgVnZW9JZBgBIAEoBBI2CgR0eXBlGAIgASgO",
            "MiguVHJhbnNpZGlvdXMuU2VyaWFsaXphdGlvbi5CdWlsZGluZy5UeXBlGngK",
            "C1RyYW5zaXRMaW5lEgwKBG5hbWUYASABKAkSNAoEdHlwZRgCIAEoDjImLlRy",
            "YW5zaWRpb3VzLlNlcmlhbGl6YXRpb24uVHJhbnNpdFR5cGUSEQoJaW5ib3Vu",
            "ZElkGAMgASgEEhIKCm91dGJvdW5kSWQYBCABKARCIKoCHVRyYW5zaWRpb3Vz",
            "LlNlcmlhbGl6YXRpb24uT1NNYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Transidious.Serialization.CommonReflection.Descriptor, global::Transidious.Serialization.BuildingReflection.Descriptor, global::Transidious.Serialization.StreetReflection.Descriptor, global::Transidious.Serialization.NaturalFeatureReflection.Descriptor, global::Transidious.Serialization.TransitReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.OSM.OsmGeo), global::Transidious.Serialization.OSM.OsmGeo.Parser, new[]{ "Id", "Type", "Tags" }, null, new[]{ typeof(global::Transidious.Serialization.OSM.OsmGeo.Types.Type) }, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.OSM.Node), global::Transidious.Serialization.OSM.Node.Parser, new[]{ "Geo", "Position" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.OSM.Way), global::Transidious.Serialization.OSM.Way.Parser, new[]{ "Geo", "Nodes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.OSM.Relation), global::Transidious.Serialization.OSM.Relation.Parser, new[]{ "Geo", "Members" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.OSM.Relation.Types.Member), global::Transidious.Serialization.OSM.Relation.Types.Member.Parser, new[]{ "Type", "Id", "Role" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.OSM.Area), global::Transidious.Serialization.OSM.Area.Parser, new[]{ "Nodes", "Ways", "Relations", "Boundary", "Streets", "Features", "Buildings", "Lines", "MinX", "MaxX", "MinY", "MaxY" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.OSM.Area.Types.Street), global::Transidious.Serialization.OSM.Area.Types.Street.Parser, new[]{ "WayId", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.OSM.Area.Types.NaturalFeature), global::Transidious.Serialization.OSM.Area.Types.NaturalFeature.Parser, new[]{ "GeoId", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.OSM.Area.Types.Building), global::Transidious.Serialization.OSM.Area.Types.Building.Parser, new[]{ "GeoId", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.OSM.Area.Types.TransitLine), global::Transidious.Serialization.OSM.Area.Types.TransitLine.Parser, new[]{ "Name", "Type", "InboundId", "OutboundId" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class OsmGeo : pb::IMessage<OsmGeo> {
    private static readonly pb::MessageParser<OsmGeo> _parser = new pb::MessageParser<OsmGeo>(() => new OsmGeo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OsmGeo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transidious.Serialization.OSM.OSMReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OsmGeo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OsmGeo(OsmGeo other) : this() {
      id_ = other.id_;
      type_ = other.type_;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OsmGeo Clone() {
      return new OsmGeo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Transidious.Serialization.OSM.OsmGeo.Types.Type type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Transidious.Serialization.OSM.OsmGeo.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OsmGeo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OsmGeo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OsmGeo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            Type = (global::Transidious.Serialization.OSM.OsmGeo.Types.Type) input.ReadEnum();
            break;
          }
          case 26: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the OsmGeo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("Node")] Node = 0,
        [pbr::OriginalName("Way")] Way = 1,
        [pbr::OriginalName("Relation")] Relation = 2,
      }

    }
    #endregion

  }

  public sealed partial class Node : pb::IMessage<Node> {
    private static readonly pb::MessageParser<Node> _parser = new pb::MessageParser<Node>(() => new Node());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Node> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transidious.Serialization.OSM.OSMReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Node() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Node(Node other) : this() {
      geo_ = other.geo_ != null ? other.geo_.Clone() : null;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Node Clone() {
      return new Node(this);
    }

    /// <summary>Field number for the "geo" field.</summary>
    public const int GeoFieldNumber = 1;
    private global::Transidious.Serialization.OSM.OsmGeo geo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Transidious.Serialization.OSM.OsmGeo Geo {
      get { return geo_; }
      set {
        geo_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 2;
    private global::Transidious.Serialization.Vector2 position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Transidious.Serialization.Vector2 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Node);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Node other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Geo, other.Geo)) return false;
      if (!object.Equals(Position, other.Position)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (geo_ != null) hash ^= Geo.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (geo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Geo);
      }
      if (position_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (geo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Geo);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Node other) {
      if (other == null) {
        return;
      }
      if (other.geo_ != null) {
        if (geo_ == null) {
          Geo = new global::Transidious.Serialization.OSM.OsmGeo();
        }
        Geo.MergeFrom(other.Geo);
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Transidious.Serialization.Vector2();
        }
        Position.MergeFrom(other.Position);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (geo_ == null) {
              Geo = new global::Transidious.Serialization.OSM.OsmGeo();
            }
            input.ReadMessage(Geo);
            break;
          }
          case 18: {
            if (position_ == null) {
              Position = new global::Transidious.Serialization.Vector2();
            }
            input.ReadMessage(Position);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Way : pb::IMessage<Way> {
    private static readonly pb::MessageParser<Way> _parser = new pb::MessageParser<Way>(() => new Way());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Way> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transidious.Serialization.OSM.OSMReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Way() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Way(Way other) : this() {
      geo_ = other.geo_ != null ? other.geo_.Clone() : null;
      nodes_ = other.nodes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Way Clone() {
      return new Way(this);
    }

    /// <summary>Field number for the "geo" field.</summary>
    public const int GeoFieldNumber = 1;
    private global::Transidious.Serialization.OSM.OsmGeo geo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Transidious.Serialization.OSM.OsmGeo Geo {
      get { return geo_; }
      set {
        geo_ = value;
      }
    }

    /// <summary>Field number for the "nodes" field.</summary>
    public const int NodesFieldNumber = 2;
    private static readonly pb::FieldCodec<ulong> _repeated_nodes_codec
        = pb::FieldCodec.ForUInt64(18);
    private readonly pbc::RepeatedField<ulong> nodes_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> Nodes {
      get { return nodes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Way);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Way other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Geo, other.Geo)) return false;
      if(!nodes_.Equals(other.nodes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (geo_ != null) hash ^= Geo.GetHashCode();
      hash ^= nodes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (geo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Geo);
      }
      nodes_.WriteTo(output, _repeated_nodes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (geo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Geo);
      }
      size += nodes_.CalculateSize(_repeated_nodes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Way other) {
      if (other == null) {
        return;
      }
      if (other.geo_ != null) {
        if (geo_ == null) {
          Geo = new global::Transidious.Serialization.OSM.OsmGeo();
        }
        Geo.MergeFrom(other.Geo);
      }
      nodes_.Add(other.nodes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (geo_ == null) {
              Geo = new global::Transidious.Serialization.OSM.OsmGeo();
            }
            input.ReadMessage(Geo);
            break;
          }
          case 18:
          case 16: {
            nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Relation : pb::IMessage<Relation> {
    private static readonly pb::MessageParser<Relation> _parser = new pb::MessageParser<Relation>(() => new Relation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Relation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transidious.Serialization.OSM.OSMReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Relation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Relation(Relation other) : this() {
      geo_ = other.geo_ != null ? other.geo_.Clone() : null;
      members_ = other.members_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Relation Clone() {
      return new Relation(this);
    }

    /// <summary>Field number for the "geo" field.</summary>
    public const int GeoFieldNumber = 1;
    private global::Transidious.Serialization.OSM.OsmGeo geo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Transidious.Serialization.OSM.OsmGeo Geo {
      get { return geo_; }
      set {
        geo_ = value;
      }
    }

    /// <summary>Field number for the "members" field.</summary>
    public const int MembersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.OSM.Relation.Types.Member> _repeated_members_codec
        = pb::FieldCodec.ForMessage(18, global::Transidious.Serialization.OSM.Relation.Types.Member.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.OSM.Relation.Types.Member> members_ = new pbc::RepeatedField<global::Transidious.Serialization.OSM.Relation.Types.Member>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.OSM.Relation.Types.Member> Members {
      get { return members_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Relation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Relation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Geo, other.Geo)) return false;
      if(!members_.Equals(other.members_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (geo_ != null) hash ^= Geo.GetHashCode();
      hash ^= members_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (geo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Geo);
      }
      members_.WriteTo(output, _repeated_members_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (geo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Geo);
      }
      size += members_.CalculateSize(_repeated_members_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Relation other) {
      if (other == null) {
        return;
      }
      if (other.geo_ != null) {
        if (geo_ == null) {
          Geo = new global::Transidious.Serialization.OSM.OsmGeo();
        }
        Geo.MergeFrom(other.Geo);
      }
      members_.Add(other.members_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (geo_ == null) {
              Geo = new global::Transidious.Serialization.OSM.OsmGeo();
            }
            input.ReadMessage(Geo);
            break;
          }
          case 18: {
            members_.AddEntriesFrom(input, _repeated_members_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Relation message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Member : pb::IMessage<Member> {
        private static readonly pb::MessageParser<Member> _parser = new pb::MessageParser<Member>(() => new Member());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Member> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Transidious.Serialization.OSM.Relation.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Member() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Member(Member other) : this() {
          type_ = other.type_;
          id_ = other.id_;
          role_ = other.role_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Member Clone() {
          return new Member(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private global::Transidious.Serialization.OSM.OsmGeo.Types.Type type_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Transidious.Serialization.OSM.OsmGeo.Types.Type Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 2;
        private ulong id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Id {
          get { return id_; }
          set {
            id_ = value;
          }
        }

        /// <summary>Field number for the "role" field.</summary>
        public const int RoleFieldNumber = 3;
        private string role_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Role {
          get { return role_; }
          set {
            role_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Member);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Member other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (Id != other.Id) return false;
          if (Role != other.Role) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Type != 0) hash ^= Type.GetHashCode();
          if (Id != 0UL) hash ^= Id.GetHashCode();
          if (Role.Length != 0) hash ^= Role.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Type != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Type);
          }
          if (Id != 0UL) {
            output.WriteRawTag(16);
            output.WriteUInt64(Id);
          }
          if (Role.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Role);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Type != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (Id != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
          }
          if (Role.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Role);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Member other) {
          if (other == null) {
            return;
          }
          if (other.Type != 0) {
            Type = other.Type;
          }
          if (other.Id != 0UL) {
            Id = other.Id;
          }
          if (other.Role.Length != 0) {
            Role = other.Role;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Type = (global::Transidious.Serialization.OSM.OsmGeo.Types.Type) input.ReadEnum();
                break;
              }
              case 16: {
                Id = input.ReadUInt64();
                break;
              }
              case 26: {
                Role = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class Area : pb::IMessage<Area> {
    private static readonly pb::MessageParser<Area> _parser = new pb::MessageParser<Area>(() => new Area());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Area> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transidious.Serialization.OSM.OSMReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Area() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Area(Area other) : this() {
      nodes_ = other.nodes_.Clone();
      ways_ = other.ways_.Clone();
      relations_ = other.relations_.Clone();
      boundary_ = other.boundary_;
      streets_ = other.streets_.Clone();
      features_ = other.features_.Clone();
      buildings_ = other.buildings_.Clone();
      lines_ = other.lines_.Clone();
      minX_ = other.minX_;
      maxX_ = other.maxX_;
      minY_ = other.minY_;
      maxY_ = other.maxY_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Area Clone() {
      return new Area(this);
    }

    /// <summary>Field number for the "nodes" field.</summary>
    public const int NodesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.OSM.Node> _repeated_nodes_codec
        = pb::FieldCodec.ForMessage(10, global::Transidious.Serialization.OSM.Node.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.OSM.Node> nodes_ = new pbc::RepeatedField<global::Transidious.Serialization.OSM.Node>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.OSM.Node> Nodes {
      get { return nodes_; }
    }

    /// <summary>Field number for the "ways" field.</summary>
    public const int WaysFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.OSM.Way> _repeated_ways_codec
        = pb::FieldCodec.ForMessage(18, global::Transidious.Serialization.OSM.Way.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.OSM.Way> ways_ = new pbc::RepeatedField<global::Transidious.Serialization.OSM.Way>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.OSM.Way> Ways {
      get { return ways_; }
    }

    /// <summary>Field number for the "relations" field.</summary>
    public const int RelationsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.OSM.Relation> _repeated_relations_codec
        = pb::FieldCodec.ForMessage(26, global::Transidious.Serialization.OSM.Relation.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.OSM.Relation> relations_ = new pbc::RepeatedField<global::Transidious.Serialization.OSM.Relation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.OSM.Relation> Relations {
      get { return relations_; }
    }

    /// <summary>Field number for the "boundary" field.</summary>
    public const int BoundaryFieldNumber = 4;
    private ulong boundary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Boundary {
      get { return boundary_; }
      set {
        boundary_ = value;
      }
    }

    /// <summary>Field number for the "streets" field.</summary>
    public const int StreetsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.OSM.Area.Types.Street> _repeated_streets_codec
        = pb::FieldCodec.ForMessage(42, global::Transidious.Serialization.OSM.Area.Types.Street.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.OSM.Area.Types.Street> streets_ = new pbc::RepeatedField<global::Transidious.Serialization.OSM.Area.Types.Street>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.OSM.Area.Types.Street> Streets {
      get { return streets_; }
    }

    /// <summary>Field number for the "features" field.</summary>
    public const int FeaturesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.OSM.Area.Types.NaturalFeature> _repeated_features_codec
        = pb::FieldCodec.ForMessage(50, global::Transidious.Serialization.OSM.Area.Types.NaturalFeature.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.OSM.Area.Types.NaturalFeature> features_ = new pbc::RepeatedField<global::Transidious.Serialization.OSM.Area.Types.NaturalFeature>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.OSM.Area.Types.NaturalFeature> Features {
      get { return features_; }
    }

    /// <summary>Field number for the "buildings" field.</summary>
    public const int BuildingsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.OSM.Area.Types.Building> _repeated_buildings_codec
        = pb::FieldCodec.ForMessage(58, global::Transidious.Serialization.OSM.Area.Types.Building.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.OSM.Area.Types.Building> buildings_ = new pbc::RepeatedField<global::Transidious.Serialization.OSM.Area.Types.Building>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.OSM.Area.Types.Building> Buildings {
      get { return buildings_; }
    }

    /// <summary>Field number for the "lines" field.</summary>
    public const int LinesFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.OSM.Area.Types.TransitLine> _repeated_lines_codec
        = pb::FieldCodec.ForMessage(66, global::Transidious.Serialization.OSM.Area.Types.TransitLine.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.OSM.Area.Types.TransitLine> lines_ = new pbc::RepeatedField<global::Transidious.Serialization.OSM.Area.Types.TransitLine>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.OSM.Area.Types.TransitLine> Lines {
      get { return lines_; }
    }

    /// <summary>Field number for the "minX" field.</summary>
    public const int MinXFieldNumber = 9;
    private float minX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MinX {
      get { return minX_; }
      set {
        minX_ = value;
      }
    }

    /// <summary>Field number for the "maxX" field.</summary>
    public const int MaxXFieldNumber = 10;
    private float maxX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MaxX {
      get { return maxX_; }
      set {
        maxX_ = value;
      }
    }

    /// <summary>Field number for the "minY" field.</summary>
    public const int MinYFieldNumber = 11;
    private float minY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MinY {
      get { return minY_; }
      set {
        minY_ = value;
      }
    }

    /// <summary>Field number for the "maxY" field.</summary>
    public const int MaxYFieldNumber = 12;
    private float maxY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MaxY {
      get { return maxY_; }
      set {
        maxY_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Area);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Area other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!nodes_.Equals(other.nodes_)) return false;
      if(!ways_.Equals(other.ways_)) return false;
      if(!relations_.Equals(other.relations_)) return false;
      if (Boundary != other.Boundary) return false;
      if(!streets_.Equals(other.streets_)) return false;
      if(!features_.Equals(other.features_)) return false;
      if(!buildings_.Equals(other.buildings_)) return false;
      if(!lines_.Equals(other.lines_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinX, other.MinX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxX, other.MaxX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinY, other.MinY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxY, other.MaxY)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= nodes_.GetHashCode();
      hash ^= ways_.GetHashCode();
      hash ^= relations_.GetHashCode();
      if (Boundary != 0UL) hash ^= Boundary.GetHashCode();
      hash ^= streets_.GetHashCode();
      hash ^= features_.GetHashCode();
      hash ^= buildings_.GetHashCode();
      hash ^= lines_.GetHashCode();
      if (MinX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinX);
      if (MaxX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxX);
      if (MinY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinY);
      if (MaxY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxY);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      nodes_.WriteTo(output, _repeated_nodes_codec);
      ways_.WriteTo(output, _repeated_ways_codec);
      relations_.WriteTo(output, _repeated_relations_codec);
      if (Boundary != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Boundary);
      }
      streets_.WriteTo(output, _repeated_streets_codec);
      features_.WriteTo(output, _repeated_features_codec);
      buildings_.WriteTo(output, _repeated_buildings_codec);
      lines_.WriteTo(output, _repeated_lines_codec);
      if (MinX != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(MinX);
      }
      if (MaxX != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(MaxX);
      }
      if (MinY != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(MinY);
      }
      if (MaxY != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(MaxY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += nodes_.CalculateSize(_repeated_nodes_codec);
      size += ways_.CalculateSize(_repeated_ways_codec);
      size += relations_.CalculateSize(_repeated_relations_codec);
      if (Boundary != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Boundary);
      }
      size += streets_.CalculateSize(_repeated_streets_codec);
      size += features_.CalculateSize(_repeated_features_codec);
      size += buildings_.CalculateSize(_repeated_buildings_codec);
      size += lines_.CalculateSize(_repeated_lines_codec);
      if (MinX != 0F) {
        size += 1 + 4;
      }
      if (MaxX != 0F) {
        size += 1 + 4;
      }
      if (MinY != 0F) {
        size += 1 + 4;
      }
      if (MaxY != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Area other) {
      if (other == null) {
        return;
      }
      nodes_.Add(other.nodes_);
      ways_.Add(other.ways_);
      relations_.Add(other.relations_);
      if (other.Boundary != 0UL) {
        Boundary = other.Boundary;
      }
      streets_.Add(other.streets_);
      features_.Add(other.features_);
      buildings_.Add(other.buildings_);
      lines_.Add(other.lines_);
      if (other.MinX != 0F) {
        MinX = other.MinX;
      }
      if (other.MaxX != 0F) {
        MaxX = other.MaxX;
      }
      if (other.MinY != 0F) {
        MinY = other.MinY;
      }
      if (other.MaxY != 0F) {
        MaxY = other.MaxY;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
            break;
          }
          case 18: {
            ways_.AddEntriesFrom(input, _repeated_ways_codec);
            break;
          }
          case 26: {
            relations_.AddEntriesFrom(input, _repeated_relations_codec);
            break;
          }
          case 32: {
            Boundary = input.ReadUInt64();
            break;
          }
          case 42: {
            streets_.AddEntriesFrom(input, _repeated_streets_codec);
            break;
          }
          case 50: {
            features_.AddEntriesFrom(input, _repeated_features_codec);
            break;
          }
          case 58: {
            buildings_.AddEntriesFrom(input, _repeated_buildings_codec);
            break;
          }
          case 66: {
            lines_.AddEntriesFrom(input, _repeated_lines_codec);
            break;
          }
          case 77: {
            MinX = input.ReadFloat();
            break;
          }
          case 85: {
            MaxX = input.ReadFloat();
            break;
          }
          case 93: {
            MinY = input.ReadFloat();
            break;
          }
          case 101: {
            MaxY = input.ReadFloat();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Area message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Street : pb::IMessage<Street> {
        private static readonly pb::MessageParser<Street> _parser = new pb::MessageParser<Street>(() => new Street());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Street> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Transidious.Serialization.OSM.Area.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Street() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Street(Street other) : this() {
          wayId_ = other.wayId_;
          type_ = other.type_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Street Clone() {
          return new Street(this);
        }

        /// <summary>Field number for the "wayId" field.</summary>
        public const int WayIdFieldNumber = 1;
        private ulong wayId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong WayId {
          get { return wayId_; }
          set {
            wayId_ = value;
          }
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 2;
        private global::Transidious.Serialization.Street.Types.Type type_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Transidious.Serialization.Street.Types.Type Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Street);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Street other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (WayId != other.WayId) return false;
          if (Type != other.Type) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (WayId != 0UL) hash ^= WayId.GetHashCode();
          if (Type != 0) hash ^= Type.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (WayId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(WayId);
          }
          if (Type != 0) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Type);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (WayId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(WayId);
          }
          if (Type != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Street other) {
          if (other == null) {
            return;
          }
          if (other.WayId != 0UL) {
            WayId = other.WayId;
          }
          if (other.Type != 0) {
            Type = other.Type;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                WayId = input.ReadUInt64();
                break;
              }
              case 16: {
                Type = (global::Transidious.Serialization.Street.Types.Type) input.ReadEnum();
                break;
              }
            }
          }
        }

      }

      public sealed partial class NaturalFeature : pb::IMessage<NaturalFeature> {
        private static readonly pb::MessageParser<NaturalFeature> _parser = new pb::MessageParser<NaturalFeature>(() => new NaturalFeature());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NaturalFeature> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Transidious.Serialization.OSM.Area.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NaturalFeature() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NaturalFeature(NaturalFeature other) : this() {
          geoId_ = other.geoId_;
          type_ = other.type_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NaturalFeature Clone() {
          return new NaturalFeature(this);
        }

        /// <summary>Field number for the "geoId" field.</summary>
        public const int GeoIdFieldNumber = 1;
        private ulong geoId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong GeoId {
          get { return geoId_; }
          set {
            geoId_ = value;
          }
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 2;
        private global::Transidious.Serialization.NaturalFeature.Types.Type type_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Transidious.Serialization.NaturalFeature.Types.Type Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NaturalFeature);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NaturalFeature other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (GeoId != other.GeoId) return false;
          if (Type != other.Type) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (GeoId != 0UL) hash ^= GeoId.GetHashCode();
          if (Type != 0) hash ^= Type.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (GeoId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(GeoId);
          }
          if (Type != 0) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Type);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (GeoId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GeoId);
          }
          if (Type != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NaturalFeature other) {
          if (other == null) {
            return;
          }
          if (other.GeoId != 0UL) {
            GeoId = other.GeoId;
          }
          if (other.Type != 0) {
            Type = other.Type;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                GeoId = input.ReadUInt64();
                break;
              }
              case 16: {
                Type = (global::Transidious.Serialization.NaturalFeature.Types.Type) input.ReadEnum();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Building : pb::IMessage<Building> {
        private static readonly pb::MessageParser<Building> _parser = new pb::MessageParser<Building>(() => new Building());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Building> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Transidious.Serialization.OSM.Area.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Building() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Building(Building other) : this() {
          geoId_ = other.geoId_;
          type_ = other.type_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Building Clone() {
          return new Building(this);
        }

        /// <summary>Field number for the "geoId" field.</summary>
        public const int GeoIdFieldNumber = 1;
        private ulong geoId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong GeoId {
          get { return geoId_; }
          set {
            geoId_ = value;
          }
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 2;
        private global::Transidious.Serialization.Building.Types.Type type_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Transidious.Serialization.Building.Types.Type Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Building);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Building other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (GeoId != other.GeoId) return false;
          if (Type != other.Type) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (GeoId != 0UL) hash ^= GeoId.GetHashCode();
          if (Type != 0) hash ^= Type.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (GeoId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(GeoId);
          }
          if (Type != 0) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Type);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (GeoId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GeoId);
          }
          if (Type != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Building other) {
          if (other == null) {
            return;
          }
          if (other.GeoId != 0UL) {
            GeoId = other.GeoId;
          }
          if (other.Type != 0) {
            Type = other.Type;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                GeoId = input.ReadUInt64();
                break;
              }
              case 16: {
                Type = (global::Transidious.Serialization.Building.Types.Type) input.ReadEnum();
                break;
              }
            }
          }
        }

      }

      public sealed partial class TransitLine : pb::IMessage<TransitLine> {
        private static readonly pb::MessageParser<TransitLine> _parser = new pb::MessageParser<TransitLine>(() => new TransitLine());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TransitLine> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Transidious.Serialization.OSM.Area.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TransitLine() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TransitLine(TransitLine other) : this() {
          name_ = other.name_;
          type_ = other.type_;
          inboundId_ = other.inboundId_;
          outboundId_ = other.outboundId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TransitLine Clone() {
          return new TransitLine(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 2;
        private global::Transidious.Serialization.TransitType type_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Transidious.Serialization.TransitType Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "inboundId" field.</summary>
        public const int InboundIdFieldNumber = 3;
        private ulong inboundId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong InboundId {
          get { return inboundId_; }
          set {
            inboundId_ = value;
          }
        }

        /// <summary>Field number for the "outboundId" field.</summary>
        public const int OutboundIdFieldNumber = 4;
        private ulong outboundId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong OutboundId {
          get { return outboundId_; }
          set {
            outboundId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TransitLine);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TransitLine other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (Type != other.Type) return false;
          if (InboundId != other.InboundId) return false;
          if (OutboundId != other.OutboundId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Type != 0) hash ^= Type.GetHashCode();
          if (InboundId != 0UL) hash ^= InboundId.GetHashCode();
          if (OutboundId != 0UL) hash ^= OutboundId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (Type != 0) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Type);
          }
          if (InboundId != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(InboundId);
          }
          if (OutboundId != 0UL) {
            output.WriteRawTag(32);
            output.WriteUInt64(OutboundId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Type != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (InboundId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(InboundId);
          }
          if (OutboundId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(OutboundId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TransitLine other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Type != 0) {
            Type = other.Type;
          }
          if (other.InboundId != 0UL) {
            InboundId = other.InboundId;
          }
          if (other.OutboundId != 0UL) {
            OutboundId = other.OutboundId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 16: {
                Type = (global::Transidious.Serialization.TransitType) input.ReadEnum();
                break;
              }
              case 24: {
                InboundId = input.ReadUInt64();
                break;
              }
              case 32: {
                OutboundId = input.ReadUInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
