// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Simulation.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Transidious.Serialization {

  /// <summary>Holder for reflection information generated from Simulation.proto</summary>
  public static partial class SimulationReflection {

    #region Descriptor
    /// <summary>File descriptor for Simulation.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SimulationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBTaW11bGF0aW9uLnByb3RvEhlUcmFuc2lkaW91cy5TZXJpYWxpemF0aW9u",
            "GgxDb21tb24ucHJvdG8aGWdvb2dsZS9wcm90b2J1Zi9hbnkucHJvdG8i8wQK",
            "CFBhdGhTdGVwEj4KBGtpbmQYASABKA4yMC5UcmFuc2lkaW91cy5TZXJpYWxp",
            "emF0aW9uLlBhdGhTdGVwLlBhdGhTdGVwS2luZBIRCgl0aW1lc3RhbXAYAiAB",
            "KAQSJQoHZGV0YWlscxgDIAEoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnkabAoI",
            "V2Fsa1N0ZXASMAoEZnJvbRgBIAEoCzIiLlRyYW5zaWRpb3VzLlNlcmlhbGl6",
            "YXRpb24uVmVjdG9yMhIuCgJ0bxgCIAEoCzIiLlRyYW5zaWRpb3VzLlNlcmlh",
            "bGl6YXRpb24uVmVjdG9yMhowCglEcml2ZVN0ZXASEQoJc2VnbWVudElEGAEg",
            "ASgNEhAKCGJhY2t3YXJkGAIgASgIGssBChBQYXJ0aWFsRHJpdmVTdGVwEjQK",
            "CHN0YXJ0UG9zGAEgASgLMiIuVHJhbnNpZGlvdXMuU2VyaWFsaXphdGlvbi5W",
            "ZWN0b3IyEjIKBmVuZFBvcxgCIAEoCzIiLlRyYW5zaWRpb3VzLlNlcmlhbGl6",
            "YXRpb24uVmVjdG9yMhIRCglzZWdtZW50SUQYAyABKA0SEAoIYmFja3dhcmQY",
            "BCABKAgSFAoMcGFydGlhbFN0YXJ0GAUgASgIEhIKCnBhcnRpYWxFbmQYBiAB",
            "KAgaNQoRUHVibGljVHJhbnNpdFN0ZXASDgoGbGluZUlEGAEgASgNEhAKCHJv",
            "dXRlSURzGAIgAygNIkgKDFBhdGhTdGVwS2luZBIICgRXYWxrEAASCQoFRHJp",
            "dmUQARIQCgxQYXJ0aWFsRHJpdmUQAhIRCg1QdWJsaWNUcmFuc2l0EAMiiwEK",
            "ElBhdGhQbGFubmluZ1Jlc3VsdBIMCgRjb3N0GAEgASgCEhAKCGR1cmF0aW9u",
            "GAIgASgCEg8KB2xlYXZlQnkYAyABKAQSEAoIYXJyaXZlQXQYBCABKAQSMgoF",
            "c3RlcHMYBSADKAsyIy5UcmFuc2lkaW91cy5TZXJpYWxpemF0aW9uLlBhdGhT",
            "dGVwIpgBCgpBY3RpdmVQYXRoEg4KBnN0ZXBObxgBIAEoDRIXCg9jdXJyZW50",
            "VmVsb2NpdHkYAiABKAISFAoMc3RlcFByb2dyZXNzGAMgASgCEjsKBHBhdGgY",
            "BCABKAsyLS5UcmFuc2lkaW91cy5TZXJpYWxpemF0aW9uLlBhdGhQbGFubmlu",
            "Z1Jlc3VsdBIOCgZJc1R1cm4YBSABKAginAEKA0NhchIKCgJpZBgBIAEoDRIQ",
            "Cghkcml2ZXJJZBgCIAEoDRIQCghjYXJNb2RlbBgDIAEoDRI0Cghwb3NpdGlv",
            "bhgEIAEoCzIiLlRyYW5zaWRpb3VzLlNlcmlhbGl6YXRpb24uVmVjdG9yMhIv",
            "CgVjb2xvchgFIAEoCzIgLlRyYW5zaWRpb3VzLlNlcmlhbGl6YXRpb24uQ29s",
            "b3IihQgKCENpdGl6aWVuEgoKAmlkGAEgASgNEhEKCWZpcnN0TmFtZRgCIAEo",
            "CRIQCghsYXN0TmFtZRgDIAEoCRILCgNhZ2UYBCABKA0SEAoIYmlydGhkYXkY",
            "BSABKA0SDgoGZmVtYWxlGAYgASgIEkIKCm9jY3VwYXRpb24YByABKA4yLi5U",
            "cmFuc2lkaW91cy5TZXJpYWxpemF0aW9uLkNpdGl6aWVuLk9jY3VwYXRpb24S",
            "DQoFbW9uZXkYCCABKAISEAoIZWR1Y2F0ZWQYCSABKAgSEQoJaGFwcGluZXNz",
            "GAogASgNEkcKDXJlbGF0aW9uc2hpcHMYCyADKAsyMC5UcmFuc2lkaW91cy5T",
            "ZXJpYWxpemF0aW9uLkNpdGl6aWVuLlJlbGF0aW9uc2hpcBJNChBwb2ludHNP",
            "ZkludGVyZXN0GAwgAygLMjMuVHJhbnNpZGlvdXMuU2VyaWFsaXphdGlvbi5D",
            "aXRpemllbi5Qb2ludE9mSW50ZXJlc3QSDQoFY2FySUQYDSABKA0SOwoPY3Vy",
            "cmVudFBvc2l0aW9uGA4gASgLMiIuVHJhbnNpZGlvdXMuU2VyaWFsaXphdGlv",
            "bi5WZWN0b3IyEjkKCmFjdGl2ZVBhdGgYDyABKAsyJS5UcmFuc2lkaW91cy5T",
            "ZXJpYWxpemF0aW9uLkFjdGl2ZVBhdGgSEwoLc2NoZWR1bGVJZHgYECABKAUS",
            "EgoKc2NoZWR1bGVJRBgRIAEoDRpmCgxSZWxhdGlvbnNoaXASQgoEa2luZBgB",
            "IAEoDjI0LlRyYW5zaWRpb3VzLlNlcmlhbGl6YXRpb24uQ2l0aXppZW4uUmVs",
            "YXRpb25zaGlwS2luZBISCgpjaXRpemllbklkGAIgASgNGmwKD1BvaW50T2ZJ",
            "bnRlcmVzdBJFCgRraW5kGAEgASgOMjcuVHJhbnNpZGlvdXMuU2VyaWFsaXph",
            "dGlvbi5DaXRpemllbi5Qb2ludE9mSW50ZXJlc3RLaW5kEhIKCmJ1aWxkaW5n",
            "SWQYAiABKA0ijwEKCk9jY3VwYXRpb24SCgoGV29ya2VyEAASCwoHUmV0aXJl",
            "ZBABEhAKDEtpbmRlcmdhcmRlbhACEhsKF0VsZW1lbnRhcnlTY2hvb2xTdHVk",
            "ZW50EAMSFQoRSGlnaFNjaG9vbFN0dWRlbnQQBBIVChFVbml2ZXJzaXR5U3R1",
            "ZGVudBAFEgsKB1RyYWluZWUQBiIoChBSZWxhdGlvbnNoaXBLaW5kEhQKEFNp",
            "Z25pZmljYW50T3RoZXIQACJHChNQb2ludE9mSW50ZXJlc3RLaW5kEggKBEhv",
            "bWUQABIICgRXb3JrEAESCgoGU2Nob29sEAISEAoMR3JvY2VyeVN0b3JlEANC",
            "HKoCGVRyYW5zaWRpb3VzLlNlcmlhbGl6YXRpb25iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Transidious.Serialization.CommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.PathStep), global::Transidious.Serialization.PathStep.Parser, new[]{ "Kind", "Timestamp", "Details" }, null, new[]{ typeof(global::Transidious.Serialization.PathStep.Types.PathStepKind) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.PathStep.Types.WalkStep), global::Transidious.Serialization.PathStep.Types.WalkStep.Parser, new[]{ "From", "To" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.PathStep.Types.DriveStep), global::Transidious.Serialization.PathStep.Types.DriveStep.Parser, new[]{ "SegmentID", "Backward" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.PathStep.Types.PartialDriveStep), global::Transidious.Serialization.PathStep.Types.PartialDriveStep.Parser, new[]{ "StartPos", "EndPos", "SegmentID", "Backward", "PartialStart", "PartialEnd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.PathStep.Types.PublicTransitStep), global::Transidious.Serialization.PathStep.Types.PublicTransitStep.Parser, new[]{ "LineID", "RouteIDs" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.PathPlanningResult), global::Transidious.Serialization.PathPlanningResult.Parser, new[]{ "Cost", "Duration", "LeaveBy", "ArriveAt", "Steps" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.ActivePath), global::Transidious.Serialization.ActivePath.Parser, new[]{ "StepNo", "CurrentVelocity", "StepProgress", "Path", "IsTurn" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.Car), global::Transidious.Serialization.Car.Parser, new[]{ "Id", "DriverId", "CarModel", "Position", "Color" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.Citizien), global::Transidious.Serialization.Citizien.Parser, new[]{ "Id", "FirstName", "LastName", "Age", "Birthday", "Female", "Occupation", "Money", "Educated", "Happiness", "Relationships", "PointsOfInterest", "CarID", "CurrentPosition", "ActivePath", "ScheduleIdx", "ScheduleID" }, null, new[]{ typeof(global::Transidious.Serialization.Citizien.Types.Occupation), typeof(global::Transidious.Serialization.Citizien.Types.RelationshipKind), typeof(global::Transidious.Serialization.Citizien.Types.PointOfInterestKind) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.Citizien.Types.Relationship), global::Transidious.Serialization.Citizien.Types.Relationship.Parser, new[]{ "Kind", "CitizienId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.Citizien.Types.PointOfInterest), global::Transidious.Serialization.Citizien.Types.PointOfInterest.Parser, new[]{ "Kind", "BuildingId" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PathStep : pb::IMessage<PathStep> {
    private static readonly pb::MessageParser<PathStep> _parser = new pb::MessageParser<PathStep>(() => new PathStep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PathStep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transidious.Serialization.SimulationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PathStep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PathStep(PathStep other) : this() {
      kind_ = other.kind_;
      timestamp_ = other.timestamp_;
      details_ = other.details_ != null ? other.details_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PathStep Clone() {
      return new PathStep(this);
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 1;
    private global::Transidious.Serialization.PathStep.Types.PathStepKind kind_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Transidious.Serialization.PathStep.Types.PathStepKind Kind {
      get { return kind_; }
      set {
        kind_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private ulong timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Any details_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Details {
      get { return details_; }
      set {
        details_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PathStep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PathStep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Kind != other.Kind) return false;
      if (Timestamp != other.Timestamp) return false;
      if (!object.Equals(Details, other.Details)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Kind != 0) hash ^= Kind.GetHashCode();
      if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
      if (details_ != null) hash ^= Details.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Kind != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Kind);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Timestamp);
      }
      if (details_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Details);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Kind != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Kind);
      }
      if (Timestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (details_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Details);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PathStep other) {
      if (other == null) {
        return;
      }
      if (other.Kind != 0) {
        Kind = other.Kind;
      }
      if (other.Timestamp != 0UL) {
        Timestamp = other.Timestamp;
      }
      if (other.details_ != null) {
        if (details_ == null) {
          Details = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Details.MergeFrom(other.Details);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Kind = (global::Transidious.Serialization.PathStep.Types.PathStepKind) input.ReadEnum();
            break;
          }
          case 16: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 26: {
            if (details_ == null) {
              Details = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Details);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PathStep message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum PathStepKind {
        [pbr::OriginalName("Walk")] Walk = 0,
        [pbr::OriginalName("Drive")] Drive = 1,
        [pbr::OriginalName("PartialDrive")] PartialDrive = 2,
        [pbr::OriginalName("PublicTransit")] PublicTransit = 3,
      }

      public sealed partial class WalkStep : pb::IMessage<WalkStep> {
        private static readonly pb::MessageParser<WalkStep> _parser = new pb::MessageParser<WalkStep>(() => new WalkStep());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<WalkStep> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Transidious.Serialization.PathStep.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WalkStep() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WalkStep(WalkStep other) : this() {
          from_ = other.from_ != null ? other.from_.Clone() : null;
          to_ = other.to_ != null ? other.to_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WalkStep Clone() {
          return new WalkStep(this);
        }

        /// <summary>Field number for the "from" field.</summary>
        public const int FromFieldNumber = 1;
        private global::Transidious.Serialization.Vector2 from_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Transidious.Serialization.Vector2 From {
          get { return from_; }
          set {
            from_ = value;
          }
        }

        /// <summary>Field number for the "to" field.</summary>
        public const int ToFieldNumber = 2;
        private global::Transidious.Serialization.Vector2 to_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Transidious.Serialization.Vector2 To {
          get { return to_; }
          set {
            to_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as WalkStep);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(WalkStep other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(From, other.From)) return false;
          if (!object.Equals(To, other.To)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (from_ != null) hash ^= From.GetHashCode();
          if (to_ != null) hash ^= To.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (from_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(From);
          }
          if (to_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(To);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (from_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
          }
          if (to_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(WalkStep other) {
          if (other == null) {
            return;
          }
          if (other.from_ != null) {
            if (from_ == null) {
              From = new global::Transidious.Serialization.Vector2();
            }
            From.MergeFrom(other.From);
          }
          if (other.to_ != null) {
            if (to_ == null) {
              To = new global::Transidious.Serialization.Vector2();
            }
            To.MergeFrom(other.To);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (from_ == null) {
                  From = new global::Transidious.Serialization.Vector2();
                }
                input.ReadMessage(From);
                break;
              }
              case 18: {
                if (to_ == null) {
                  To = new global::Transidious.Serialization.Vector2();
                }
                input.ReadMessage(To);
                break;
              }
            }
          }
        }

      }

      public sealed partial class DriveStep : pb::IMessage<DriveStep> {
        private static readonly pb::MessageParser<DriveStep> _parser = new pb::MessageParser<DriveStep>(() => new DriveStep());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DriveStep> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Transidious.Serialization.PathStep.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DriveStep() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DriveStep(DriveStep other) : this() {
          segmentID_ = other.segmentID_;
          backward_ = other.backward_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DriveStep Clone() {
          return new DriveStep(this);
        }

        /// <summary>Field number for the "segmentID" field.</summary>
        public const int SegmentIDFieldNumber = 1;
        private uint segmentID_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint SegmentID {
          get { return segmentID_; }
          set {
            segmentID_ = value;
          }
        }

        /// <summary>Field number for the "backward" field.</summary>
        public const int BackwardFieldNumber = 2;
        private bool backward_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Backward {
          get { return backward_; }
          set {
            backward_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DriveStep);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DriveStep other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SegmentID != other.SegmentID) return false;
          if (Backward != other.Backward) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (SegmentID != 0) hash ^= SegmentID.GetHashCode();
          if (Backward != false) hash ^= Backward.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (SegmentID != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(SegmentID);
          }
          if (Backward != false) {
            output.WriteRawTag(16);
            output.WriteBool(Backward);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (SegmentID != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SegmentID);
          }
          if (Backward != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DriveStep other) {
          if (other == null) {
            return;
          }
          if (other.SegmentID != 0) {
            SegmentID = other.SegmentID;
          }
          if (other.Backward != false) {
            Backward = other.Backward;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                SegmentID = input.ReadUInt32();
                break;
              }
              case 16: {
                Backward = input.ReadBool();
                break;
              }
            }
          }
        }

      }

      public sealed partial class PartialDriveStep : pb::IMessage<PartialDriveStep> {
        private static readonly pb::MessageParser<PartialDriveStep> _parser = new pb::MessageParser<PartialDriveStep>(() => new PartialDriveStep());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PartialDriveStep> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Transidious.Serialization.PathStep.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PartialDriveStep() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PartialDriveStep(PartialDriveStep other) : this() {
          startPos_ = other.startPos_ != null ? other.startPos_.Clone() : null;
          endPos_ = other.endPos_ != null ? other.endPos_.Clone() : null;
          segmentID_ = other.segmentID_;
          backward_ = other.backward_;
          partialStart_ = other.partialStart_;
          partialEnd_ = other.partialEnd_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PartialDriveStep Clone() {
          return new PartialDriveStep(this);
        }

        /// <summary>Field number for the "startPos" field.</summary>
        public const int StartPosFieldNumber = 1;
        private global::Transidious.Serialization.Vector2 startPos_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Transidious.Serialization.Vector2 StartPos {
          get { return startPos_; }
          set {
            startPos_ = value;
          }
        }

        /// <summary>Field number for the "endPos" field.</summary>
        public const int EndPosFieldNumber = 2;
        private global::Transidious.Serialization.Vector2 endPos_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Transidious.Serialization.Vector2 EndPos {
          get { return endPos_; }
          set {
            endPos_ = value;
          }
        }

        /// <summary>Field number for the "segmentID" field.</summary>
        public const int SegmentIDFieldNumber = 3;
        private uint segmentID_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint SegmentID {
          get { return segmentID_; }
          set {
            segmentID_ = value;
          }
        }

        /// <summary>Field number for the "backward" field.</summary>
        public const int BackwardFieldNumber = 4;
        private bool backward_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Backward {
          get { return backward_; }
          set {
            backward_ = value;
          }
        }

        /// <summary>Field number for the "partialStart" field.</summary>
        public const int PartialStartFieldNumber = 5;
        private bool partialStart_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool PartialStart {
          get { return partialStart_; }
          set {
            partialStart_ = value;
          }
        }

        /// <summary>Field number for the "partialEnd" field.</summary>
        public const int PartialEndFieldNumber = 6;
        private bool partialEnd_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool PartialEnd {
          get { return partialEnd_; }
          set {
            partialEnd_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PartialDriveStep);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PartialDriveStep other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(StartPos, other.StartPos)) return false;
          if (!object.Equals(EndPos, other.EndPos)) return false;
          if (SegmentID != other.SegmentID) return false;
          if (Backward != other.Backward) return false;
          if (PartialStart != other.PartialStart) return false;
          if (PartialEnd != other.PartialEnd) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (startPos_ != null) hash ^= StartPos.GetHashCode();
          if (endPos_ != null) hash ^= EndPos.GetHashCode();
          if (SegmentID != 0) hash ^= SegmentID.GetHashCode();
          if (Backward != false) hash ^= Backward.GetHashCode();
          if (PartialStart != false) hash ^= PartialStart.GetHashCode();
          if (PartialEnd != false) hash ^= PartialEnd.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (startPos_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(StartPos);
          }
          if (endPos_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(EndPos);
          }
          if (SegmentID != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(SegmentID);
          }
          if (Backward != false) {
            output.WriteRawTag(32);
            output.WriteBool(Backward);
          }
          if (PartialStart != false) {
            output.WriteRawTag(40);
            output.WriteBool(PartialStart);
          }
          if (PartialEnd != false) {
            output.WriteRawTag(48);
            output.WriteBool(PartialEnd);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (startPos_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartPos);
          }
          if (endPos_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndPos);
          }
          if (SegmentID != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SegmentID);
          }
          if (Backward != false) {
            size += 1 + 1;
          }
          if (PartialStart != false) {
            size += 1 + 1;
          }
          if (PartialEnd != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PartialDriveStep other) {
          if (other == null) {
            return;
          }
          if (other.startPos_ != null) {
            if (startPos_ == null) {
              StartPos = new global::Transidious.Serialization.Vector2();
            }
            StartPos.MergeFrom(other.StartPos);
          }
          if (other.endPos_ != null) {
            if (endPos_ == null) {
              EndPos = new global::Transidious.Serialization.Vector2();
            }
            EndPos.MergeFrom(other.EndPos);
          }
          if (other.SegmentID != 0) {
            SegmentID = other.SegmentID;
          }
          if (other.Backward != false) {
            Backward = other.Backward;
          }
          if (other.PartialStart != false) {
            PartialStart = other.PartialStart;
          }
          if (other.PartialEnd != false) {
            PartialEnd = other.PartialEnd;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (startPos_ == null) {
                  StartPos = new global::Transidious.Serialization.Vector2();
                }
                input.ReadMessage(StartPos);
                break;
              }
              case 18: {
                if (endPos_ == null) {
                  EndPos = new global::Transidious.Serialization.Vector2();
                }
                input.ReadMessage(EndPos);
                break;
              }
              case 24: {
                SegmentID = input.ReadUInt32();
                break;
              }
              case 32: {
                Backward = input.ReadBool();
                break;
              }
              case 40: {
                PartialStart = input.ReadBool();
                break;
              }
              case 48: {
                PartialEnd = input.ReadBool();
                break;
              }
            }
          }
        }

      }

      public sealed partial class PublicTransitStep : pb::IMessage<PublicTransitStep> {
        private static readonly pb::MessageParser<PublicTransitStep> _parser = new pb::MessageParser<PublicTransitStep>(() => new PublicTransitStep());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PublicTransitStep> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Transidious.Serialization.PathStep.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PublicTransitStep() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PublicTransitStep(PublicTransitStep other) : this() {
          lineID_ = other.lineID_;
          routeIDs_ = other.routeIDs_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PublicTransitStep Clone() {
          return new PublicTransitStep(this);
        }

        /// <summary>Field number for the "lineID" field.</summary>
        public const int LineIDFieldNumber = 1;
        private uint lineID_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint LineID {
          get { return lineID_; }
          set {
            lineID_ = value;
          }
        }

        /// <summary>Field number for the "routeIDs" field.</summary>
        public const int RouteIDsFieldNumber = 2;
        private static readonly pb::FieldCodec<uint> _repeated_routeIDs_codec
            = pb::FieldCodec.ForUInt32(18);
        private readonly pbc::RepeatedField<uint> routeIDs_ = new pbc::RepeatedField<uint>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<uint> RouteIDs {
          get { return routeIDs_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PublicTransitStep);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PublicTransitStep other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (LineID != other.LineID) return false;
          if(!routeIDs_.Equals(other.routeIDs_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (LineID != 0) hash ^= LineID.GetHashCode();
          hash ^= routeIDs_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (LineID != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(LineID);
          }
          routeIDs_.WriteTo(output, _repeated_routeIDs_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (LineID != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LineID);
          }
          size += routeIDs_.CalculateSize(_repeated_routeIDs_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PublicTransitStep other) {
          if (other == null) {
            return;
          }
          if (other.LineID != 0) {
            LineID = other.LineID;
          }
          routeIDs_.Add(other.routeIDs_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                LineID = input.ReadUInt32();
                break;
              }
              case 18:
              case 16: {
                routeIDs_.AddEntriesFrom(input, _repeated_routeIDs_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class PathPlanningResult : pb::IMessage<PathPlanningResult> {
    private static readonly pb::MessageParser<PathPlanningResult> _parser = new pb::MessageParser<PathPlanningResult>(() => new PathPlanningResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PathPlanningResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transidious.Serialization.SimulationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PathPlanningResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PathPlanningResult(PathPlanningResult other) : this() {
      cost_ = other.cost_;
      duration_ = other.duration_;
      leaveBy_ = other.leaveBy_;
      arriveAt_ = other.arriveAt_;
      steps_ = other.steps_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PathPlanningResult Clone() {
      return new PathPlanningResult(this);
    }

    /// <summary>Field number for the "cost" field.</summary>
    public const int CostFieldNumber = 1;
    private float cost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Cost {
      get { return cost_; }
      set {
        cost_ = value;
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 2;
    private float duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    /// <summary>Field number for the "leaveBy" field.</summary>
    public const int LeaveByFieldNumber = 3;
    private ulong leaveBy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LeaveBy {
      get { return leaveBy_; }
      set {
        leaveBy_ = value;
      }
    }

    /// <summary>Field number for the "arriveAt" field.</summary>
    public const int ArriveAtFieldNumber = 4;
    private ulong arriveAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ArriveAt {
      get { return arriveAt_; }
      set {
        arriveAt_ = value;
      }
    }

    /// <summary>Field number for the "steps" field.</summary>
    public const int StepsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.PathStep> _repeated_steps_codec
        = pb::FieldCodec.ForMessage(42, global::Transidious.Serialization.PathStep.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.PathStep> steps_ = new pbc::RepeatedField<global::Transidious.Serialization.PathStep>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.PathStep> Steps {
      get { return steps_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PathPlanningResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PathPlanningResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Cost, other.Cost)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Duration, other.Duration)) return false;
      if (LeaveBy != other.LeaveBy) return false;
      if (ArriveAt != other.ArriveAt) return false;
      if(!steps_.Equals(other.steps_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Cost != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Cost);
      if (Duration != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Duration);
      if (LeaveBy != 0UL) hash ^= LeaveBy.GetHashCode();
      if (ArriveAt != 0UL) hash ^= ArriveAt.GetHashCode();
      hash ^= steps_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Cost != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Cost);
      }
      if (Duration != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Duration);
      }
      if (LeaveBy != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(LeaveBy);
      }
      if (ArriveAt != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(ArriveAt);
      }
      steps_.WriteTo(output, _repeated_steps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Cost != 0F) {
        size += 1 + 4;
      }
      if (Duration != 0F) {
        size += 1 + 4;
      }
      if (LeaveBy != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LeaveBy);
      }
      if (ArriveAt != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ArriveAt);
      }
      size += steps_.CalculateSize(_repeated_steps_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PathPlanningResult other) {
      if (other == null) {
        return;
      }
      if (other.Cost != 0F) {
        Cost = other.Cost;
      }
      if (other.Duration != 0F) {
        Duration = other.Duration;
      }
      if (other.LeaveBy != 0UL) {
        LeaveBy = other.LeaveBy;
      }
      if (other.ArriveAt != 0UL) {
        ArriveAt = other.ArriveAt;
      }
      steps_.Add(other.steps_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Cost = input.ReadFloat();
            break;
          }
          case 21: {
            Duration = input.ReadFloat();
            break;
          }
          case 24: {
            LeaveBy = input.ReadUInt64();
            break;
          }
          case 32: {
            ArriveAt = input.ReadUInt64();
            break;
          }
          case 42: {
            steps_.AddEntriesFrom(input, _repeated_steps_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActivePath : pb::IMessage<ActivePath> {
    private static readonly pb::MessageParser<ActivePath> _parser = new pb::MessageParser<ActivePath>(() => new ActivePath());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivePath> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transidious.Serialization.SimulationReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivePath() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivePath(ActivePath other) : this() {
      stepNo_ = other.stepNo_;
      currentVelocity_ = other.currentVelocity_;
      stepProgress_ = other.stepProgress_;
      path_ = other.path_ != null ? other.path_.Clone() : null;
      isTurn_ = other.isTurn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivePath Clone() {
      return new ActivePath(this);
    }

    /// <summary>Field number for the "stepNo" field.</summary>
    public const int StepNoFieldNumber = 1;
    private uint stepNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StepNo {
      get { return stepNo_; }
      set {
        stepNo_ = value;
      }
    }

    /// <summary>Field number for the "currentVelocity" field.</summary>
    public const int CurrentVelocityFieldNumber = 2;
    private float currentVelocity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float CurrentVelocity {
      get { return currentVelocity_; }
      set {
        currentVelocity_ = value;
      }
    }

    /// <summary>Field number for the "stepProgress" field.</summary>
    public const int StepProgressFieldNumber = 3;
    private float stepProgress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float StepProgress {
      get { return stepProgress_; }
      set {
        stepProgress_ = value;
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 4;
    private global::Transidious.Serialization.PathPlanningResult path_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Transidious.Serialization.PathPlanningResult Path {
      get { return path_; }
      set {
        path_ = value;
      }
    }

    /// <summary>Field number for the "IsTurn" field.</summary>
    public const int IsTurnFieldNumber = 5;
    private bool isTurn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsTurn {
      get { return isTurn_; }
      set {
        isTurn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivePath);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivePath other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StepNo != other.StepNo) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CurrentVelocity, other.CurrentVelocity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(StepProgress, other.StepProgress)) return false;
      if (!object.Equals(Path, other.Path)) return false;
      if (IsTurn != other.IsTurn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StepNo != 0) hash ^= StepNo.GetHashCode();
      if (CurrentVelocity != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CurrentVelocity);
      if (StepProgress != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(StepProgress);
      if (path_ != null) hash ^= Path.GetHashCode();
      if (IsTurn != false) hash ^= IsTurn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StepNo != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StepNo);
      }
      if (CurrentVelocity != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(CurrentVelocity);
      }
      if (StepProgress != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(StepProgress);
      }
      if (path_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Path);
      }
      if (IsTurn != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsTurn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StepNo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StepNo);
      }
      if (CurrentVelocity != 0F) {
        size += 1 + 4;
      }
      if (StepProgress != 0F) {
        size += 1 + 4;
      }
      if (path_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Path);
      }
      if (IsTurn != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivePath other) {
      if (other == null) {
        return;
      }
      if (other.StepNo != 0) {
        StepNo = other.StepNo;
      }
      if (other.CurrentVelocity != 0F) {
        CurrentVelocity = other.CurrentVelocity;
      }
      if (other.StepProgress != 0F) {
        StepProgress = other.StepProgress;
      }
      if (other.path_ != null) {
        if (path_ == null) {
          Path = new global::Transidious.Serialization.PathPlanningResult();
        }
        Path.MergeFrom(other.Path);
      }
      if (other.IsTurn != false) {
        IsTurn = other.IsTurn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StepNo = input.ReadUInt32();
            break;
          }
          case 21: {
            CurrentVelocity = input.ReadFloat();
            break;
          }
          case 29: {
            StepProgress = input.ReadFloat();
            break;
          }
          case 34: {
            if (path_ == null) {
              Path = new global::Transidious.Serialization.PathPlanningResult();
            }
            input.ReadMessage(Path);
            break;
          }
          case 40: {
            IsTurn = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// int carModel;
  /// public uint id;
  /// public Citizien driver;
  /// public float maxVelocity;
  /// public float acceleration;
  /// public float length;
  /// public PathFollowingObject pathFollow;
  /// public PathFollowingObject.CompletionCallback callback;
  /// public TrafficSimulator.DrivingCar drivingCar;
  /// </summary>
  public sealed partial class Car : pb::IMessage<Car> {
    private static readonly pb::MessageParser<Car> _parser = new pb::MessageParser<Car>(() => new Car());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Car> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transidious.Serialization.SimulationReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Car() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Car(Car other) : this() {
      id_ = other.id_;
      driverId_ = other.driverId_;
      carModel_ = other.carModel_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      color_ = other.color_ != null ? other.color_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Car Clone() {
      return new Car(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "driverId" field.</summary>
    public const int DriverIdFieldNumber = 2;
    private uint driverId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DriverId {
      get { return driverId_; }
      set {
        driverId_ = value;
      }
    }

    /// <summary>Field number for the "carModel" field.</summary>
    public const int CarModelFieldNumber = 3;
    private uint carModel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CarModel {
      get { return carModel_; }
      set {
        carModel_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 4;
    private global::Transidious.Serialization.Vector2 position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Transidious.Serialization.Vector2 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 5;
    private global::Transidious.Serialization.Color color_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Transidious.Serialization.Color Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Car);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Car other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (DriverId != other.DriverId) return false;
      if (CarModel != other.CarModel) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Color, other.Color)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (DriverId != 0) hash ^= DriverId.GetHashCode();
      if (CarModel != 0) hash ^= CarModel.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (color_ != null) hash ^= Color.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (DriverId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(DriverId);
      }
      if (CarModel != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(CarModel);
      }
      if (position_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Position);
      }
      if (color_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Color);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (DriverId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DriverId);
      }
      if (CarModel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CarModel);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (color_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Car other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.DriverId != 0) {
        DriverId = other.DriverId;
      }
      if (other.CarModel != 0) {
        CarModel = other.CarModel;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Transidious.Serialization.Vector2();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.color_ != null) {
        if (color_ == null) {
          Color = new global::Transidious.Serialization.Color();
        }
        Color.MergeFrom(other.Color);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            DriverId = input.ReadUInt32();
            break;
          }
          case 24: {
            CarModel = input.ReadUInt32();
            break;
          }
          case 34: {
            if (position_ == null) {
              Position = new global::Transidious.Serialization.Vector2();
            }
            input.ReadMessage(Position);
            break;
          }
          case 42: {
            if (color_ == null) {
              Color = new global::Transidious.Serialization.Color();
            }
            input.ReadMessage(Color);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// public string firstName;
  /// public string lastName;
  /// public short age;
  /// public short birthday;
  /// public bool female;
  /// public Occupation occupation;
  /// public decimal money;
  /// public Car car;
  /// public bool educated;
  /// public byte happiness;
  /// public AbstractSchedule[] schedules;
  /// public Dictionary&lt;Relationship, Citizien> relationships;
  /// public Dictionary&lt;PointOfInterest, Building> pointsOfInterest;
  /// </summary>
  public sealed partial class Citizien : pb::IMessage<Citizien> {
    private static readonly pb::MessageParser<Citizien> _parser = new pb::MessageParser<Citizien>(() => new Citizien());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Citizien> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transidious.Serialization.SimulationReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Citizien() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Citizien(Citizien other) : this() {
      id_ = other.id_;
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      age_ = other.age_;
      birthday_ = other.birthday_;
      female_ = other.female_;
      occupation_ = other.occupation_;
      money_ = other.money_;
      educated_ = other.educated_;
      happiness_ = other.happiness_;
      relationships_ = other.relationships_.Clone();
      pointsOfInterest_ = other.pointsOfInterest_.Clone();
      carID_ = other.carID_;
      currentPosition_ = other.currentPosition_ != null ? other.currentPosition_.Clone() : null;
      activePath_ = other.activePath_ != null ? other.activePath_.Clone() : null;
      scheduleIdx_ = other.scheduleIdx_;
      scheduleID_ = other.scheduleID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Citizien Clone() {
      return new Citizien(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "firstName" field.</summary>
    public const int FirstNameFieldNumber = 2;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lastName" field.</summary>
    public const int LastNameFieldNumber = 3;
    private string lastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "age" field.</summary>
    public const int AgeFieldNumber = 4;
    private uint age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    /// <summary>Field number for the "birthday" field.</summary>
    public const int BirthdayFieldNumber = 5;
    private uint birthday_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Birthday {
      get { return birthday_; }
      set {
        birthday_ = value;
      }
    }

    /// <summary>Field number for the "female" field.</summary>
    public const int FemaleFieldNumber = 6;
    private bool female_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Female {
      get { return female_; }
      set {
        female_ = value;
      }
    }

    /// <summary>Field number for the "occupation" field.</summary>
    public const int OccupationFieldNumber = 7;
    private global::Transidious.Serialization.Citizien.Types.Occupation occupation_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Transidious.Serialization.Citizien.Types.Occupation Occupation {
      get { return occupation_; }
      set {
        occupation_ = value;
      }
    }

    /// <summary>Field number for the "money" field.</summary>
    public const int MoneyFieldNumber = 8;
    private float money_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Money {
      get { return money_; }
      set {
        money_ = value;
      }
    }

    /// <summary>Field number for the "educated" field.</summary>
    public const int EducatedFieldNumber = 9;
    private bool educated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Educated {
      get { return educated_; }
      set {
        educated_ = value;
      }
    }

    /// <summary>Field number for the "happiness" field.</summary>
    public const int HappinessFieldNumber = 10;
    private uint happiness_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Happiness {
      get { return happiness_; }
      set {
        happiness_ = value;
      }
    }

    /// <summary>Field number for the "relationships" field.</summary>
    public const int RelationshipsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.Citizien.Types.Relationship> _repeated_relationships_codec
        = pb::FieldCodec.ForMessage(90, global::Transidious.Serialization.Citizien.Types.Relationship.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.Citizien.Types.Relationship> relationships_ = new pbc::RepeatedField<global::Transidious.Serialization.Citizien.Types.Relationship>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.Citizien.Types.Relationship> Relationships {
      get { return relationships_; }
    }

    /// <summary>Field number for the "pointsOfInterest" field.</summary>
    public const int PointsOfInterestFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.Citizien.Types.PointOfInterest> _repeated_pointsOfInterest_codec
        = pb::FieldCodec.ForMessage(98, global::Transidious.Serialization.Citizien.Types.PointOfInterest.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.Citizien.Types.PointOfInterest> pointsOfInterest_ = new pbc::RepeatedField<global::Transidious.Serialization.Citizien.Types.PointOfInterest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.Citizien.Types.PointOfInterest> PointsOfInterest {
      get { return pointsOfInterest_; }
    }

    /// <summary>Field number for the "carID" field.</summary>
    public const int CarIDFieldNumber = 13;
    private uint carID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CarID {
      get { return carID_; }
      set {
        carID_ = value;
      }
    }

    /// <summary>Field number for the "currentPosition" field.</summary>
    public const int CurrentPositionFieldNumber = 14;
    private global::Transidious.Serialization.Vector2 currentPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Transidious.Serialization.Vector2 CurrentPosition {
      get { return currentPosition_; }
      set {
        currentPosition_ = value;
      }
    }

    /// <summary>Field number for the "activePath" field.</summary>
    public const int ActivePathFieldNumber = 15;
    private global::Transidious.Serialization.ActivePath activePath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Transidious.Serialization.ActivePath ActivePath {
      get { return activePath_; }
      set {
        activePath_ = value;
      }
    }

    /// <summary>Field number for the "scheduleIdx" field.</summary>
    public const int ScheduleIdxFieldNumber = 16;
    private int scheduleIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ScheduleIdx {
      get { return scheduleIdx_; }
      set {
        scheduleIdx_ = value;
      }
    }

    /// <summary>Field number for the "scheduleID" field.</summary>
    public const int ScheduleIDFieldNumber = 17;
    private uint scheduleID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ScheduleID {
      get { return scheduleID_; }
      set {
        scheduleID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Citizien);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Citizien other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      if (Age != other.Age) return false;
      if (Birthday != other.Birthday) return false;
      if (Female != other.Female) return false;
      if (Occupation != other.Occupation) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Money, other.Money)) return false;
      if (Educated != other.Educated) return false;
      if (Happiness != other.Happiness) return false;
      if(!relationships_.Equals(other.relationships_)) return false;
      if(!pointsOfInterest_.Equals(other.pointsOfInterest_)) return false;
      if (CarID != other.CarID) return false;
      if (!object.Equals(CurrentPosition, other.CurrentPosition)) return false;
      if (!object.Equals(ActivePath, other.ActivePath)) return false;
      if (ScheduleIdx != other.ScheduleIdx) return false;
      if (ScheduleID != other.ScheduleID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      if (Age != 0) hash ^= Age.GetHashCode();
      if (Birthday != 0) hash ^= Birthday.GetHashCode();
      if (Female != false) hash ^= Female.GetHashCode();
      if (Occupation != 0) hash ^= Occupation.GetHashCode();
      if (Money != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Money);
      if (Educated != false) hash ^= Educated.GetHashCode();
      if (Happiness != 0) hash ^= Happiness.GetHashCode();
      hash ^= relationships_.GetHashCode();
      hash ^= pointsOfInterest_.GetHashCode();
      if (CarID != 0) hash ^= CarID.GetHashCode();
      if (currentPosition_ != null) hash ^= CurrentPosition.GetHashCode();
      if (activePath_ != null) hash ^= ActivePath.GetHashCode();
      if (ScheduleIdx != 0) hash ^= ScheduleIdx.GetHashCode();
      if (ScheduleID != 0) hash ^= ScheduleID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastName);
      }
      if (Age != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Age);
      }
      if (Birthday != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Birthday);
      }
      if (Female != false) {
        output.WriteRawTag(48);
        output.WriteBool(Female);
      }
      if (Occupation != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Occupation);
      }
      if (Money != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Money);
      }
      if (Educated != false) {
        output.WriteRawTag(72);
        output.WriteBool(Educated);
      }
      if (Happiness != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Happiness);
      }
      relationships_.WriteTo(output, _repeated_relationships_codec);
      pointsOfInterest_.WriteTo(output, _repeated_pointsOfInterest_codec);
      if (CarID != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(CarID);
      }
      if (currentPosition_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(CurrentPosition);
      }
      if (activePath_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(ActivePath);
      }
      if (ScheduleIdx != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(ScheduleIdx);
      }
      if (ScheduleID != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(ScheduleID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Age);
      }
      if (Birthday != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Birthday);
      }
      if (Female != false) {
        size += 1 + 1;
      }
      if (Occupation != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Occupation);
      }
      if (Money != 0F) {
        size += 1 + 4;
      }
      if (Educated != false) {
        size += 1 + 1;
      }
      if (Happiness != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Happiness);
      }
      size += relationships_.CalculateSize(_repeated_relationships_codec);
      size += pointsOfInterest_.CalculateSize(_repeated_pointsOfInterest_codec);
      if (CarID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CarID);
      }
      if (currentPosition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentPosition);
      }
      if (activePath_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActivePath);
      }
      if (ScheduleIdx != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ScheduleIdx);
      }
      if (ScheduleID != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ScheduleID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Citizien other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      if (other.Birthday != 0) {
        Birthday = other.Birthday;
      }
      if (other.Female != false) {
        Female = other.Female;
      }
      if (other.Occupation != 0) {
        Occupation = other.Occupation;
      }
      if (other.Money != 0F) {
        Money = other.Money;
      }
      if (other.Educated != false) {
        Educated = other.Educated;
      }
      if (other.Happiness != 0) {
        Happiness = other.Happiness;
      }
      relationships_.Add(other.relationships_);
      pointsOfInterest_.Add(other.pointsOfInterest_);
      if (other.CarID != 0) {
        CarID = other.CarID;
      }
      if (other.currentPosition_ != null) {
        if (currentPosition_ == null) {
          CurrentPosition = new global::Transidious.Serialization.Vector2();
        }
        CurrentPosition.MergeFrom(other.CurrentPosition);
      }
      if (other.activePath_ != null) {
        if (activePath_ == null) {
          ActivePath = new global::Transidious.Serialization.ActivePath();
        }
        ActivePath.MergeFrom(other.ActivePath);
      }
      if (other.ScheduleIdx != 0) {
        ScheduleIdx = other.ScheduleIdx;
      }
      if (other.ScheduleID != 0) {
        ScheduleID = other.ScheduleID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            FirstName = input.ReadString();
            break;
          }
          case 26: {
            LastName = input.ReadString();
            break;
          }
          case 32: {
            Age = input.ReadUInt32();
            break;
          }
          case 40: {
            Birthday = input.ReadUInt32();
            break;
          }
          case 48: {
            Female = input.ReadBool();
            break;
          }
          case 56: {
            Occupation = (global::Transidious.Serialization.Citizien.Types.Occupation) input.ReadEnum();
            break;
          }
          case 69: {
            Money = input.ReadFloat();
            break;
          }
          case 72: {
            Educated = input.ReadBool();
            break;
          }
          case 80: {
            Happiness = input.ReadUInt32();
            break;
          }
          case 90: {
            relationships_.AddEntriesFrom(input, _repeated_relationships_codec);
            break;
          }
          case 98: {
            pointsOfInterest_.AddEntriesFrom(input, _repeated_pointsOfInterest_codec);
            break;
          }
          case 104: {
            CarID = input.ReadUInt32();
            break;
          }
          case 114: {
            if (currentPosition_ == null) {
              CurrentPosition = new global::Transidious.Serialization.Vector2();
            }
            input.ReadMessage(CurrentPosition);
            break;
          }
          case 122: {
            if (activePath_ == null) {
              ActivePath = new global::Transidious.Serialization.ActivePath();
            }
            input.ReadMessage(ActivePath);
            break;
          }
          case 128: {
            ScheduleIdx = input.ReadInt32();
            break;
          }
          case 136: {
            ScheduleID = input.ReadUInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Citizien message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Occupation {
        [pbr::OriginalName("Worker")] Worker = 0,
        [pbr::OriginalName("Retired")] Retired = 1,
        [pbr::OriginalName("Kindergarden")] Kindergarden = 2,
        [pbr::OriginalName("ElementarySchoolStudent")] ElementarySchoolStudent = 3,
        [pbr::OriginalName("HighSchoolStudent")] HighSchoolStudent = 4,
        [pbr::OriginalName("UniversityStudent")] UniversityStudent = 5,
        [pbr::OriginalName("Trainee")] Trainee = 6,
      }

      public enum RelationshipKind {
        [pbr::OriginalName("SignificantOther")] SignificantOther = 0,
      }

      public enum PointOfInterestKind {
        [pbr::OriginalName("Home")] Home = 0,
        [pbr::OriginalName("Work")] Work = 1,
        [pbr::OriginalName("School")] School = 2,
        [pbr::OriginalName("GroceryStore")] GroceryStore = 3,
      }

      public sealed partial class Relationship : pb::IMessage<Relationship> {
        private static readonly pb::MessageParser<Relationship> _parser = new pb::MessageParser<Relationship>(() => new Relationship());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Relationship> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Transidious.Serialization.Citizien.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Relationship() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Relationship(Relationship other) : this() {
          kind_ = other.kind_;
          citizienId_ = other.citizienId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Relationship Clone() {
          return new Relationship(this);
        }

        /// <summary>Field number for the "kind" field.</summary>
        public const int KindFieldNumber = 1;
        private global::Transidious.Serialization.Citizien.Types.RelationshipKind kind_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Transidious.Serialization.Citizien.Types.RelationshipKind Kind {
          get { return kind_; }
          set {
            kind_ = value;
          }
        }

        /// <summary>Field number for the "citizienId" field.</summary>
        public const int CitizienIdFieldNumber = 2;
        private uint citizienId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint CitizienId {
          get { return citizienId_; }
          set {
            citizienId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Relationship);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Relationship other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Kind != other.Kind) return false;
          if (CitizienId != other.CitizienId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Kind != 0) hash ^= Kind.GetHashCode();
          if (CitizienId != 0) hash ^= CitizienId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Kind != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Kind);
          }
          if (CitizienId != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(CitizienId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Kind != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Kind);
          }
          if (CitizienId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CitizienId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Relationship other) {
          if (other == null) {
            return;
          }
          if (other.Kind != 0) {
            Kind = other.Kind;
          }
          if (other.CitizienId != 0) {
            CitizienId = other.CitizienId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Kind = (global::Transidious.Serialization.Citizien.Types.RelationshipKind) input.ReadEnum();
                break;
              }
              case 16: {
                CitizienId = input.ReadUInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class PointOfInterest : pb::IMessage<PointOfInterest> {
        private static readonly pb::MessageParser<PointOfInterest> _parser = new pb::MessageParser<PointOfInterest>(() => new PointOfInterest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PointOfInterest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Transidious.Serialization.Citizien.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PointOfInterest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PointOfInterest(PointOfInterest other) : this() {
          kind_ = other.kind_;
          buildingId_ = other.buildingId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PointOfInterest Clone() {
          return new PointOfInterest(this);
        }

        /// <summary>Field number for the "kind" field.</summary>
        public const int KindFieldNumber = 1;
        private global::Transidious.Serialization.Citizien.Types.PointOfInterestKind kind_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Transidious.Serialization.Citizien.Types.PointOfInterestKind Kind {
          get { return kind_; }
          set {
            kind_ = value;
          }
        }

        /// <summary>Field number for the "buildingId" field.</summary>
        public const int BuildingIdFieldNumber = 2;
        private uint buildingId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint BuildingId {
          get { return buildingId_; }
          set {
            buildingId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PointOfInterest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PointOfInterest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Kind != other.Kind) return false;
          if (BuildingId != other.BuildingId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Kind != 0) hash ^= Kind.GetHashCode();
          if (BuildingId != 0) hash ^= BuildingId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Kind != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Kind);
          }
          if (BuildingId != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(BuildingId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Kind != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Kind);
          }
          if (BuildingId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BuildingId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PointOfInterest other) {
          if (other == null) {
            return;
          }
          if (other.Kind != 0) {
            Kind = other.Kind;
          }
          if (other.BuildingId != 0) {
            BuildingId = other.BuildingId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Kind = (global::Transidious.Serialization.Citizien.Types.PointOfInterestKind) input.ReadEnum();
                break;
              }
              case 16: {
                BuildingId = input.ReadUInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
