// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Transidious.Serialization {

  /// <summary>Holder for reflection information generated from Common.proto</summary>
  public static partial class CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for Common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxDb21tb24ucHJvdG8SGVRyYW5zaWRpb3VzLlNlcmlhbGl6YXRpb24iPAoN",
            "VmVyc2lvblRyaXBsZRINCgVtYWpvchgBIAEoDRINCgVtaW5vchgCIAEoDRIN",
            "CgVwYXRjaBgDIAEoDSIfCgdWZWN0b3IyEgkKAXgYASABKAISCQoBeRgCIAEo",
            "AiIqCgdWZWN0b3IzEgkKAXgYASABKAISCQoBeRgCIAEoAhIJCgF6GAMgASgC",
            "IjMKBUNvbG9yEgkKAXIYASABKAISCQoBZxgCIAEoAhIJCgFiGAMgASgCEgkK",
            "AWEYBCABKAIigQEKBk1lc2gyRBI0Cgh2ZXJ0aWNlcxgBIAMoCzIiLlRyYW5z",
            "aWRpb3VzLlNlcmlhbGl6YXRpb24uVmVjdG9yMhIRCgl0cmlhbmdsZXMYAiAD",
            "KA0SLgoCdXYYAyADKAsyIi5UcmFuc2lkaW91cy5TZXJpYWxpemF0aW9uLlZl",
            "Y3RvcjIifwoETWVzaBI0Cgh2ZXJ0aWNlcxgBIAMoCzIiLlRyYW5zaWRpb3Vz",
            "LlNlcmlhbGl6YXRpb24uVmVjdG9yMxIRCgl0cmlhbmdsZXMYAiADKA0SLgoC",
            "dXYYAyADKAsyIi5UcmFuc2lkaW91cy5TZXJpYWxpemF0aW9uLlZlY3RvcjIi",
            "pAIKCU1hcE9iamVjdBIKCgJpZBgBIAEoDRIMCgRuYW1lGAIgASgJEhMKC3Vu",
            "aXF1ZVRpbGVYGAMgASgFEhMKC3VuaXF1ZVRpbGVZGAQgASgFEkYKEG91dGxp",
            "bmVQb3NpdGlvbnMYBSADKAsyLC5UcmFuc2lkaW91cy5TZXJpYWxpemF0aW9u",
            "Lk1hcE9iamVjdC5PdXRsaW5lEgwKBGFyZWEYBiABKAISNAoIY2VudHJvaWQY",
            "ByABKAsyIi5UcmFuc2lkaW91cy5TZXJpYWxpemF0aW9uLlZlY3RvcjIaRwoH",
            "T3V0bGluZRI8ChBvdXRsaW5lUG9zaXRpb25zGAEgAygLMiIuVHJhbnNpZGlv",
            "dXMuU2VyaWFsaXphdGlvbi5WZWN0b3IyQhyqAhlUcmFuc2lkaW91cy5TZXJp",
            "YWxpemF0aW9uYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.VersionTriple), global::Transidious.Serialization.VersionTriple.Parser, new[]{ "Major", "Minor", "Patch" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.Vector2), global::Transidious.Serialization.Vector2.Parser, new[]{ "X", "Y" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.Vector3), global::Transidious.Serialization.Vector3.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.Color), global::Transidious.Serialization.Color.Parser, new[]{ "R", "G", "B", "A" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.Mesh2D), global::Transidious.Serialization.Mesh2D.Parser, new[]{ "Vertices", "Triangles", "Uv" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.Mesh), global::Transidious.Serialization.Mesh.Parser, new[]{ "Vertices", "Triangles", "Uv" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.MapObject), global::Transidious.Serialization.MapObject.Parser, new[]{ "Id", "Name", "UniqueTileX", "UniqueTileY", "OutlinePositions", "Area", "Centroid" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.MapObject.Types.Outline), global::Transidious.Serialization.MapObject.Types.Outline.Parser, new[]{ "OutlinePositions" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class VersionTriple : pb::IMessage<VersionTriple> {
    private static readonly pb::MessageParser<VersionTriple> _parser = new pb::MessageParser<VersionTriple>(() => new VersionTriple());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VersionTriple> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transidious.Serialization.CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionTriple() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionTriple(VersionTriple other) : this() {
      major_ = other.major_;
      minor_ = other.minor_;
      patch_ = other.patch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionTriple Clone() {
      return new VersionTriple(this);
    }

    /// <summary>Field number for the "major" field.</summary>
    public const int MajorFieldNumber = 1;
    private uint major_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Major {
      get { return major_; }
      set {
        major_ = value;
      }
    }

    /// <summary>Field number for the "minor" field.</summary>
    public const int MinorFieldNumber = 2;
    private uint minor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Minor {
      get { return minor_; }
      set {
        minor_ = value;
      }
    }

    /// <summary>Field number for the "patch" field.</summary>
    public const int PatchFieldNumber = 3;
    private uint patch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Patch {
      get { return patch_; }
      set {
        patch_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VersionTriple);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VersionTriple other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Major != other.Major) return false;
      if (Minor != other.Minor) return false;
      if (Patch != other.Patch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Major != 0) hash ^= Major.GetHashCode();
      if (Minor != 0) hash ^= Minor.GetHashCode();
      if (Patch != 0) hash ^= Patch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Major != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Major);
      }
      if (Minor != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Minor);
      }
      if (Patch != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Patch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Major != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Major);
      }
      if (Minor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Minor);
      }
      if (Patch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Patch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VersionTriple other) {
      if (other == null) {
        return;
      }
      if (other.Major != 0) {
        Major = other.Major;
      }
      if (other.Minor != 0) {
        Minor = other.Minor;
      }
      if (other.Patch != 0) {
        Patch = other.Patch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Major = input.ReadUInt32();
            break;
          }
          case 16: {
            Minor = input.ReadUInt32();
            break;
          }
          case 24: {
            Patch = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Vector2 : pb::IMessage<Vector2> {
    private static readonly pb::MessageParser<Vector2> _parser = new pb::MessageParser<Vector2>(() => new Vector2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vector2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transidious.Serialization.CommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector2(Vector2 other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector2 Clone() {
      return new Vector2(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vector2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vector2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vector2 other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Vector3 : pb::IMessage<Vector3> {
    private static readonly pb::MessageParser<Vector3> _parser = new pb::MessageParser<Vector3>(() => new Vector3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vector3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transidious.Serialization.CommonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3(Vector3 other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3 Clone() {
      return new Vector3(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vector3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vector3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vector3 other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Color : pb::IMessage<Color> {
    private static readonly pb::MessageParser<Color> _parser = new pb::MessageParser<Color>(() => new Color());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Color> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transidious.Serialization.CommonReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Color() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Color(Color other) : this() {
      r_ = other.r_;
      g_ = other.g_;
      b_ = other.b_;
      a_ = other.a_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Color Clone() {
      return new Color(this);
    }

    /// <summary>Field number for the "r" field.</summary>
    public const int RFieldNumber = 1;
    private float r_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float R {
      get { return r_; }
      set {
        r_ = value;
      }
    }

    /// <summary>Field number for the "g" field.</summary>
    public const int GFieldNumber = 2;
    private float g_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float G {
      get { return g_; }
      set {
        g_ = value;
      }
    }

    /// <summary>Field number for the "b" field.</summary>
    public const int BFieldNumber = 3;
    private float b_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float B {
      get { return b_; }
      set {
        b_ = value;
      }
    }

    /// <summary>Field number for the "a" field.</summary>
    public const int AFieldNumber = 4;
    private float a_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float A {
      get { return a_; }
      set {
        a_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Color);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Color other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(R, other.R)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(G, other.G)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(B, other.B)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(A, other.A)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (R != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(R);
      if (G != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(G);
      if (B != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(B);
      if (A != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(A);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (R != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(R);
      }
      if (G != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(G);
      }
      if (B != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(B);
      }
      if (A != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(A);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (R != 0F) {
        size += 1 + 4;
      }
      if (G != 0F) {
        size += 1 + 4;
      }
      if (B != 0F) {
        size += 1 + 4;
      }
      if (A != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Color other) {
      if (other == null) {
        return;
      }
      if (other.R != 0F) {
        R = other.R;
      }
      if (other.G != 0F) {
        G = other.G;
      }
      if (other.B != 0F) {
        B = other.B;
      }
      if (other.A != 0F) {
        A = other.A;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            R = input.ReadFloat();
            break;
          }
          case 21: {
            G = input.ReadFloat();
            break;
          }
          case 29: {
            B = input.ReadFloat();
            break;
          }
          case 37: {
            A = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Mesh2D : pb::IMessage<Mesh2D> {
    private static readonly pb::MessageParser<Mesh2D> _parser = new pb::MessageParser<Mesh2D>(() => new Mesh2D());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Mesh2D> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transidious.Serialization.CommonReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mesh2D() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mesh2D(Mesh2D other) : this() {
      vertices_ = other.vertices_.Clone();
      triangles_ = other.triangles_.Clone();
      uv_ = other.uv_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mesh2D Clone() {
      return new Mesh2D(this);
    }

    /// <summary>Field number for the "vertices" field.</summary>
    public const int VerticesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.Vector2> _repeated_vertices_codec
        = pb::FieldCodec.ForMessage(10, global::Transidious.Serialization.Vector2.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.Vector2> vertices_ = new pbc::RepeatedField<global::Transidious.Serialization.Vector2>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.Vector2> Vertices {
      get { return vertices_; }
    }

    /// <summary>Field number for the "triangles" field.</summary>
    public const int TrianglesFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_triangles_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> triangles_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Triangles {
      get { return triangles_; }
    }

    /// <summary>Field number for the "uv" field.</summary>
    public const int UvFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.Vector2> _repeated_uv_codec
        = pb::FieldCodec.ForMessage(26, global::Transidious.Serialization.Vector2.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.Vector2> uv_ = new pbc::RepeatedField<global::Transidious.Serialization.Vector2>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.Vector2> Uv {
      get { return uv_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Mesh2D);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Mesh2D other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!vertices_.Equals(other.vertices_)) return false;
      if(!triangles_.Equals(other.triangles_)) return false;
      if(!uv_.Equals(other.uv_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= vertices_.GetHashCode();
      hash ^= triangles_.GetHashCode();
      hash ^= uv_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      vertices_.WriteTo(output, _repeated_vertices_codec);
      triangles_.WriteTo(output, _repeated_triangles_codec);
      uv_.WriteTo(output, _repeated_uv_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += vertices_.CalculateSize(_repeated_vertices_codec);
      size += triangles_.CalculateSize(_repeated_triangles_codec);
      size += uv_.CalculateSize(_repeated_uv_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Mesh2D other) {
      if (other == null) {
        return;
      }
      vertices_.Add(other.vertices_);
      triangles_.Add(other.triangles_);
      uv_.Add(other.uv_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            vertices_.AddEntriesFrom(input, _repeated_vertices_codec);
            break;
          }
          case 18:
          case 16: {
            triangles_.AddEntriesFrom(input, _repeated_triangles_codec);
            break;
          }
          case 26: {
            uv_.AddEntriesFrom(input, _repeated_uv_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Mesh : pb::IMessage<Mesh> {
    private static readonly pb::MessageParser<Mesh> _parser = new pb::MessageParser<Mesh>(() => new Mesh());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Mesh> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transidious.Serialization.CommonReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mesh() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mesh(Mesh other) : this() {
      vertices_ = other.vertices_.Clone();
      triangles_ = other.triangles_.Clone();
      uv_ = other.uv_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mesh Clone() {
      return new Mesh(this);
    }

    /// <summary>Field number for the "vertices" field.</summary>
    public const int VerticesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.Vector3> _repeated_vertices_codec
        = pb::FieldCodec.ForMessage(10, global::Transidious.Serialization.Vector3.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.Vector3> vertices_ = new pbc::RepeatedField<global::Transidious.Serialization.Vector3>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.Vector3> Vertices {
      get { return vertices_; }
    }

    /// <summary>Field number for the "triangles" field.</summary>
    public const int TrianglesFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_triangles_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> triangles_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Triangles {
      get { return triangles_; }
    }

    /// <summary>Field number for the "uv" field.</summary>
    public const int UvFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.Vector2> _repeated_uv_codec
        = pb::FieldCodec.ForMessage(26, global::Transidious.Serialization.Vector2.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.Vector2> uv_ = new pbc::RepeatedField<global::Transidious.Serialization.Vector2>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.Vector2> Uv {
      get { return uv_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Mesh);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Mesh other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!vertices_.Equals(other.vertices_)) return false;
      if(!triangles_.Equals(other.triangles_)) return false;
      if(!uv_.Equals(other.uv_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= vertices_.GetHashCode();
      hash ^= triangles_.GetHashCode();
      hash ^= uv_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      vertices_.WriteTo(output, _repeated_vertices_codec);
      triangles_.WriteTo(output, _repeated_triangles_codec);
      uv_.WriteTo(output, _repeated_uv_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += vertices_.CalculateSize(_repeated_vertices_codec);
      size += triangles_.CalculateSize(_repeated_triangles_codec);
      size += uv_.CalculateSize(_repeated_uv_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Mesh other) {
      if (other == null) {
        return;
      }
      vertices_.Add(other.vertices_);
      triangles_.Add(other.triangles_);
      uv_.Add(other.uv_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            vertices_.AddEntriesFrom(input, _repeated_vertices_codec);
            break;
          }
          case 18:
          case 16: {
            triangles_.AddEntriesFrom(input, _repeated_triangles_codec);
            break;
          }
          case 26: {
            uv_.AddEntriesFrom(input, _repeated_uv_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MapObject : pb::IMessage<MapObject> {
    private static readonly pb::MessageParser<MapObject> _parser = new pb::MessageParser<MapObject>(() => new MapObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MapObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transidious.Serialization.CommonReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapObject(MapObject other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      uniqueTileX_ = other.uniqueTileX_;
      uniqueTileY_ = other.uniqueTileY_;
      outlinePositions_ = other.outlinePositions_.Clone();
      area_ = other.area_;
      centroid_ = other.centroid_ != null ? other.centroid_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapObject Clone() {
      return new MapObject(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uniqueTileX" field.</summary>
    public const int UniqueTileXFieldNumber = 3;
    private int uniqueTileX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UniqueTileX {
      get { return uniqueTileX_; }
      set {
        uniqueTileX_ = value;
      }
    }

    /// <summary>Field number for the "uniqueTileY" field.</summary>
    public const int UniqueTileYFieldNumber = 4;
    private int uniqueTileY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UniqueTileY {
      get { return uniqueTileY_; }
      set {
        uniqueTileY_ = value;
      }
    }

    /// <summary>Field number for the "outlinePositions" field.</summary>
    public const int OutlinePositionsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.MapObject.Types.Outline> _repeated_outlinePositions_codec
        = pb::FieldCodec.ForMessage(42, global::Transidious.Serialization.MapObject.Types.Outline.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.MapObject.Types.Outline> outlinePositions_ = new pbc::RepeatedField<global::Transidious.Serialization.MapObject.Types.Outline>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.MapObject.Types.Outline> OutlinePositions {
      get { return outlinePositions_; }
    }

    /// <summary>Field number for the "area" field.</summary>
    public const int AreaFieldNumber = 6;
    private float area_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Area {
      get { return area_; }
      set {
        area_ = value;
      }
    }

    /// <summary>Field number for the "centroid" field.</summary>
    public const int CentroidFieldNumber = 7;
    private global::Transidious.Serialization.Vector2 centroid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Transidious.Serialization.Vector2 Centroid {
      get { return centroid_; }
      set {
        centroid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MapObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MapObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (UniqueTileX != other.UniqueTileX) return false;
      if (UniqueTileY != other.UniqueTileY) return false;
      if(!outlinePositions_.Equals(other.outlinePositions_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Area, other.Area)) return false;
      if (!object.Equals(Centroid, other.Centroid)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (UniqueTileX != 0) hash ^= UniqueTileX.GetHashCode();
      if (UniqueTileY != 0) hash ^= UniqueTileY.GetHashCode();
      hash ^= outlinePositions_.GetHashCode();
      if (Area != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Area);
      if (centroid_ != null) hash ^= Centroid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (UniqueTileX != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UniqueTileX);
      }
      if (UniqueTileY != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UniqueTileY);
      }
      outlinePositions_.WriteTo(output, _repeated_outlinePositions_codec);
      if (Area != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Area);
      }
      if (centroid_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Centroid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (UniqueTileX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UniqueTileX);
      }
      if (UniqueTileY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UniqueTileY);
      }
      size += outlinePositions_.CalculateSize(_repeated_outlinePositions_codec);
      if (Area != 0F) {
        size += 1 + 4;
      }
      if (centroid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Centroid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MapObject other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.UniqueTileX != 0) {
        UniqueTileX = other.UniqueTileX;
      }
      if (other.UniqueTileY != 0) {
        UniqueTileY = other.UniqueTileY;
      }
      outlinePositions_.Add(other.outlinePositions_);
      if (other.Area != 0F) {
        Area = other.Area;
      }
      if (other.centroid_ != null) {
        if (centroid_ == null) {
          Centroid = new global::Transidious.Serialization.Vector2();
        }
        Centroid.MergeFrom(other.Centroid);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            UniqueTileX = input.ReadInt32();
            break;
          }
          case 32: {
            UniqueTileY = input.ReadInt32();
            break;
          }
          case 42: {
            outlinePositions_.AddEntriesFrom(input, _repeated_outlinePositions_codec);
            break;
          }
          case 53: {
            Area = input.ReadFloat();
            break;
          }
          case 58: {
            if (centroid_ == null) {
              Centroid = new global::Transidious.Serialization.Vector2();
            }
            input.ReadMessage(Centroid);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the MapObject message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Outline : pb::IMessage<Outline> {
        private static readonly pb::MessageParser<Outline> _parser = new pb::MessageParser<Outline>(() => new Outline());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Outline> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Transidious.Serialization.MapObject.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Outline() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Outline(Outline other) : this() {
          outlinePositions_ = other.outlinePositions_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Outline Clone() {
          return new Outline(this);
        }

        /// <summary>Field number for the "outlinePositions" field.</summary>
        public const int OutlinePositionsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Transidious.Serialization.Vector2> _repeated_outlinePositions_codec
            = pb::FieldCodec.ForMessage(10, global::Transidious.Serialization.Vector2.Parser);
        private readonly pbc::RepeatedField<global::Transidious.Serialization.Vector2> outlinePositions_ = new pbc::RepeatedField<global::Transidious.Serialization.Vector2>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Transidious.Serialization.Vector2> OutlinePositions {
          get { return outlinePositions_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Outline);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Outline other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!outlinePositions_.Equals(other.outlinePositions_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= outlinePositions_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          outlinePositions_.WriteTo(output, _repeated_outlinePositions_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += outlinePositions_.CalculateSize(_repeated_outlinePositions_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Outline other) {
          if (other == null) {
            return;
          }
          outlinePositions_.Add(other.outlinePositions_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                outlinePositions_.AddEntriesFrom(input, _repeated_outlinePositions_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
