// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Map.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Transidious.Serialization {

  /// <summary>Holder for reflection information generated from Map.proto</summary>
  public static partial class MapReflection {

    #region Descriptor
    /// <summary>File descriptor for Map.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MapReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglNYXAucHJvdG8SGVRyYW5zaWRpb3VzLlNlcmlhbGl6YXRpb24aDENvbW1v",
            "bi5wcm90bxoOQnVpbGRpbmcucHJvdG8aFE5hdHVyYWxGZWF0dXJlLnByb3Rv",
            "GgxTdHJlZXQucHJvdG8aDVRyYW5zaXQucHJvdG8aEFNpbXVsYXRpb24ucHJv",
            "dG8iUAoHTWFwVGlsZRIJCgF4GAEgASgNEgkKAXkYAiABKA0SFAoMbWFwT2Jq",
            "ZWN0SURzGAMgAygNEhkKEW9ycGhhbmVkT2JqZWN0SURzGAQgAygNIqwECgNN",
            "YXASOAoGdHJpcGxlGAEgASgLMiguVHJhbnNpZGlvdXMuU2VyaWFsaXphdGlv",
            "bi5WZXJzaW9uVHJpcGxlEj0KEWJvdW5kYXJ5UG9zaXRpb25zGAIgAygLMiIu",
            "VHJhbnNpZGlvdXMuU2VyaWFsaXphdGlvbi5WZWN0b3IyEgwKBG1pblgYAyAB",
            "KAISDAoEbWF4WBgEIAEoAhIMCgRtaW5ZGAUgASgCEgwKBG1heFkYBiABKAIS",
            "PQoRc3RhcnRpbmdDYW1lcmFQb3MYByABKAsyIi5UcmFuc2lkaW91cy5TZXJp",
            "YWxpemF0aW9uLlZlY3RvcjMSOQoOYm91bmRhcnlNZXNoZXMYCCADKAsyIS5U",
            "cmFuc2lkaW91cy5TZXJpYWxpemF0aW9uLk1lc2gyRBI2CglidWlsZGluZ3MY",
            "CSADKAsyIy5UcmFuc2lkaW91cy5TZXJpYWxpemF0aW9uLkJ1aWxkaW5nEkIK",
            "D25hdHVyYWxGZWF0dXJlcxgKIAMoCzIpLlRyYW5zaWRpb3VzLlNlcmlhbGl6",
            "YXRpb24uTmF0dXJhbEZlYXR1cmUSMgoHc3RyZWV0cxgLIAMoCzIhLlRyYW5z",
            "aWRpb3VzLlNlcmlhbGl6YXRpb24uU3RyZWV0EkoKE3N0cmVldEludGVyc2Vj",
            "dGlvbnMYDCADKAsyLS5UcmFuc2lkaW91cy5TZXJpYWxpemF0aW9uLlN0cmVl",
            "dEludGVyc2VjdGlvbiJSCgdFeHBlbnNlEhMKC2Rlc2NyaXB0aW9uGAEgASgJ",
            "EjIKBmFtb3VudBgCIAEoCzIiLlRyYW5zaWRpb3VzLlNlcmlhbGl6YXRpb24u",
            "RGVjaW1hbCJSCgdFYXJuaW5nEhMKC2Rlc2NyaXB0aW9uGAEgASgJEjIKBmFt",
            "b3VudBgCIAEoCzIiLlRyYW5zaWRpb3VzLlNlcmlhbGl6YXRpb24uRGVjaW1h",
            "bCLQAgoIRmluYW5jZXMSMQoFbW9uZXkYASABKAsyIi5UcmFuc2lkaW91cy5T",
            "ZXJpYWxpemF0aW9uLkRlY2ltYWwSNAoIZXhwZW5zZXMYAiABKAsyIi5UcmFu",
            "c2lkaW91cy5TZXJpYWxpemF0aW9uLkRlY2ltYWwSOAoMZXhwZW5zZUl0ZW1z",
            "GAMgAygLMiIuVHJhbnNpZGlvdXMuU2VyaWFsaXphdGlvbi5FeHBlbnNlEjQK",
            "CGVhcm5pbmdzGAQgASgLMiIuVHJhbnNpZGlvdXMuU2VyaWFsaXphdGlvbi5E",
            "ZWNpbWFsEjgKDGVhcm5pbmdJdGVtcxgFIAMoCzIiLlRyYW5zaWRpb3VzLlNl",
            "cmlhbGl6YXRpb24uRWFybmluZxIxCgV0YXhlcxgGIAEoCzIiLlRyYW5zaWRp",
            "b3VzLlNlcmlhbGl6YXRpb24uRWFybmluZyKBBAoIU2F2ZUZpbGUSOAoGdHJp",
            "cGxlGAEgASgLMiguVHJhbnNpZGlvdXMuU2VyaWFsaXphdGlvbi5WZXJzaW9u",
            "VHJpcGxlEjsKBXRpbGVzGAIgAygLMiwuVHJhbnNpZGlvdXMuU2VyaWFsaXph",
            "dGlvbi5TYXZlRmlsZS5NYXBUaWxlcxIuCgVsaW5lcxgDIAMoCzIfLlRyYW5z",
            "aWRpb3VzLlNlcmlhbGl6YXRpb24uTGluZRIuCgVzdG9wcxgEIAMoCzIfLlRy",
            "YW5zaWRpb3VzLlNlcmlhbGl6YXRpb24uU3RvcBIwCgZyb3V0ZXMYBSADKAsy",
            "IC5UcmFuc2lkaW91cy5TZXJpYWxpemF0aW9uLlJvdXRlEjYKCWNpdGl6aWVu",
            "cxgGIAMoCzIjLlRyYW5zaWRpb3VzLlNlcmlhbGl6YXRpb24uQ2l0aXppZW4S",
            "LAoEY2FycxgHIAMoCzIeLlRyYW5zaWRpb3VzLlNlcmlhbGl6YXRpb24uQ2Fy",
            "EhAKCGdhbWVUaW1lGAggASgEEjUKCGZpbmFuY2VzGAkgASgLMiMuVHJhbnNp",
            "ZGlvdXMuU2VyaWFsaXphdGlvbi5GaW5hbmNlcxo9CghNYXBUaWxlcxIxCgV0",
            "aWxlcxgBIAMoCzIiLlRyYW5zaWRpb3VzLlNlcmlhbGl6YXRpb24uTWFwVGls",
            "ZUIcqgIZVHJhbnNpZGlvdXMuU2VyaWFsaXphdGlvbmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Transidious.Serialization.CommonReflection.Descriptor, global::Transidious.Serialization.BuildingReflection.Descriptor, global::Transidious.Serialization.NaturalFeatureReflection.Descriptor, global::Transidious.Serialization.StreetReflection.Descriptor, global::Transidious.Serialization.TransitReflection.Descriptor, global::Transidious.Serialization.SimulationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.MapTile), global::Transidious.Serialization.MapTile.Parser, new[]{ "X", "Y", "MapObjectIDs", "OrphanedObjectIDs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.Map), global::Transidious.Serialization.Map.Parser, new[]{ "Triple", "BoundaryPositions", "MinX", "MaxX", "MinY", "MaxY", "StartingCameraPos", "BoundaryMeshes", "Buildings", "NaturalFeatures", "Streets", "StreetIntersections" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.Expense), global::Transidious.Serialization.Expense.Parser, new[]{ "Description", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.Earning), global::Transidious.Serialization.Earning.Parser, new[]{ "Description", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.Finances), global::Transidious.Serialization.Finances.Parser, new[]{ "Money", "Expenses", "ExpenseItems", "Earnings", "EarningItems", "Taxes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.SaveFile), global::Transidious.Serialization.SaveFile.Parser, new[]{ "Triple", "Tiles", "Lines", "Stops", "Routes", "Citiziens", "Cars", "GameTime", "Finances" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Transidious.Serialization.SaveFile.Types.MapTiles), global::Transidious.Serialization.SaveFile.Types.MapTiles.Parser, new[]{ "Tiles" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MapTile : pb::IMessage<MapTile> {
    private static readonly pb::MessageParser<MapTile> _parser = new pb::MessageParser<MapTile>(() => new MapTile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MapTile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transidious.Serialization.MapReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapTile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapTile(MapTile other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      mapObjectIDs_ = other.mapObjectIDs_.Clone();
      orphanedObjectIDs_ = other.orphanedObjectIDs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapTile Clone() {
      return new MapTile(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private uint x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private uint y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "mapObjectIDs" field.</summary>
    public const int MapObjectIDsFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_mapObjectIDs_codec
        = pb::FieldCodec.ForUInt32(26);
    private readonly pbc::RepeatedField<uint> mapObjectIDs_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> MapObjectIDs {
      get { return mapObjectIDs_; }
    }

    /// <summary>Field number for the "orphanedObjectIDs" field.</summary>
    public const int OrphanedObjectIDsFieldNumber = 4;
    private static readonly pb::FieldCodec<uint> _repeated_orphanedObjectIDs_codec
        = pb::FieldCodec.ForUInt32(34);
    private readonly pbc::RepeatedField<uint> orphanedObjectIDs_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> OrphanedObjectIDs {
      get { return orphanedObjectIDs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MapTile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MapTile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if(!mapObjectIDs_.Equals(other.mapObjectIDs_)) return false;
      if(!orphanedObjectIDs_.Equals(other.orphanedObjectIDs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      hash ^= mapObjectIDs_.GetHashCode();
      hash ^= orphanedObjectIDs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Y);
      }
      mapObjectIDs_.WriteTo(output, _repeated_mapObjectIDs_codec);
      orphanedObjectIDs_.WriteTo(output, _repeated_orphanedObjectIDs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Y);
      }
      size += mapObjectIDs_.CalculateSize(_repeated_mapObjectIDs_codec);
      size += orphanedObjectIDs_.CalculateSize(_repeated_orphanedObjectIDs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MapTile other) {
      if (other == null) {
        return;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      mapObjectIDs_.Add(other.mapObjectIDs_);
      orphanedObjectIDs_.Add(other.orphanedObjectIDs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadUInt32();
            break;
          }
          case 16: {
            Y = input.ReadUInt32();
            break;
          }
          case 26:
          case 24: {
            mapObjectIDs_.AddEntriesFrom(input, _repeated_mapObjectIDs_codec);
            break;
          }
          case 34:
          case 32: {
            orphanedObjectIDs_.AddEntriesFrom(input, _repeated_orphanedObjectIDs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Map : pb::IMessage<Map> {
    private static readonly pb::MessageParser<Map> _parser = new pb::MessageParser<Map>(() => new Map());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Map> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transidious.Serialization.MapReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Map() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Map(Map other) : this() {
      triple_ = other.triple_ != null ? other.triple_.Clone() : null;
      boundaryPositions_ = other.boundaryPositions_.Clone();
      minX_ = other.minX_;
      maxX_ = other.maxX_;
      minY_ = other.minY_;
      maxY_ = other.maxY_;
      startingCameraPos_ = other.startingCameraPos_ != null ? other.startingCameraPos_.Clone() : null;
      boundaryMeshes_ = other.boundaryMeshes_.Clone();
      buildings_ = other.buildings_.Clone();
      naturalFeatures_ = other.naturalFeatures_.Clone();
      streets_ = other.streets_.Clone();
      streetIntersections_ = other.streetIntersections_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Map Clone() {
      return new Map(this);
    }

    /// <summary>Field number for the "triple" field.</summary>
    public const int TripleFieldNumber = 1;
    private global::Transidious.Serialization.VersionTriple triple_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Transidious.Serialization.VersionTriple Triple {
      get { return triple_; }
      set {
        triple_ = value;
      }
    }

    /// <summary>Field number for the "boundaryPositions" field.</summary>
    public const int BoundaryPositionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.Vector2> _repeated_boundaryPositions_codec
        = pb::FieldCodec.ForMessage(18, global::Transidious.Serialization.Vector2.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.Vector2> boundaryPositions_ = new pbc::RepeatedField<global::Transidious.Serialization.Vector2>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.Vector2> BoundaryPositions {
      get { return boundaryPositions_; }
    }

    /// <summary>Field number for the "minX" field.</summary>
    public const int MinXFieldNumber = 3;
    private float minX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MinX {
      get { return minX_; }
      set {
        minX_ = value;
      }
    }

    /// <summary>Field number for the "maxX" field.</summary>
    public const int MaxXFieldNumber = 4;
    private float maxX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MaxX {
      get { return maxX_; }
      set {
        maxX_ = value;
      }
    }

    /// <summary>Field number for the "minY" field.</summary>
    public const int MinYFieldNumber = 5;
    private float minY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MinY {
      get { return minY_; }
      set {
        minY_ = value;
      }
    }

    /// <summary>Field number for the "maxY" field.</summary>
    public const int MaxYFieldNumber = 6;
    private float maxY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MaxY {
      get { return maxY_; }
      set {
        maxY_ = value;
      }
    }

    /// <summary>Field number for the "startingCameraPos" field.</summary>
    public const int StartingCameraPosFieldNumber = 7;
    private global::Transidious.Serialization.Vector3 startingCameraPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Transidious.Serialization.Vector3 StartingCameraPos {
      get { return startingCameraPos_; }
      set {
        startingCameraPos_ = value;
      }
    }

    /// <summary>Field number for the "boundaryMeshes" field.</summary>
    public const int BoundaryMeshesFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.Mesh2D> _repeated_boundaryMeshes_codec
        = pb::FieldCodec.ForMessage(66, global::Transidious.Serialization.Mesh2D.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.Mesh2D> boundaryMeshes_ = new pbc::RepeatedField<global::Transidious.Serialization.Mesh2D>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.Mesh2D> BoundaryMeshes {
      get { return boundaryMeshes_; }
    }

    /// <summary>Field number for the "buildings" field.</summary>
    public const int BuildingsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.Building> _repeated_buildings_codec
        = pb::FieldCodec.ForMessage(74, global::Transidious.Serialization.Building.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.Building> buildings_ = new pbc::RepeatedField<global::Transidious.Serialization.Building>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.Building> Buildings {
      get { return buildings_; }
    }

    /// <summary>Field number for the "naturalFeatures" field.</summary>
    public const int NaturalFeaturesFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.NaturalFeature> _repeated_naturalFeatures_codec
        = pb::FieldCodec.ForMessage(82, global::Transidious.Serialization.NaturalFeature.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.NaturalFeature> naturalFeatures_ = new pbc::RepeatedField<global::Transidious.Serialization.NaturalFeature>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.NaturalFeature> NaturalFeatures {
      get { return naturalFeatures_; }
    }

    /// <summary>Field number for the "streets" field.</summary>
    public const int StreetsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.Street> _repeated_streets_codec
        = pb::FieldCodec.ForMessage(90, global::Transidious.Serialization.Street.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.Street> streets_ = new pbc::RepeatedField<global::Transidious.Serialization.Street>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.Street> Streets {
      get { return streets_; }
    }

    /// <summary>Field number for the "streetIntersections" field.</summary>
    public const int StreetIntersectionsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.StreetIntersection> _repeated_streetIntersections_codec
        = pb::FieldCodec.ForMessage(98, global::Transidious.Serialization.StreetIntersection.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.StreetIntersection> streetIntersections_ = new pbc::RepeatedField<global::Transidious.Serialization.StreetIntersection>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.StreetIntersection> StreetIntersections {
      get { return streetIntersections_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Map);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Map other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Triple, other.Triple)) return false;
      if(!boundaryPositions_.Equals(other.boundaryPositions_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinX, other.MinX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxX, other.MaxX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinY, other.MinY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxY, other.MaxY)) return false;
      if (!object.Equals(StartingCameraPos, other.StartingCameraPos)) return false;
      if(!boundaryMeshes_.Equals(other.boundaryMeshes_)) return false;
      if(!buildings_.Equals(other.buildings_)) return false;
      if(!naturalFeatures_.Equals(other.naturalFeatures_)) return false;
      if(!streets_.Equals(other.streets_)) return false;
      if(!streetIntersections_.Equals(other.streetIntersections_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (triple_ != null) hash ^= Triple.GetHashCode();
      hash ^= boundaryPositions_.GetHashCode();
      if (MinX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinX);
      if (MaxX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxX);
      if (MinY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinY);
      if (MaxY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxY);
      if (startingCameraPos_ != null) hash ^= StartingCameraPos.GetHashCode();
      hash ^= boundaryMeshes_.GetHashCode();
      hash ^= buildings_.GetHashCode();
      hash ^= naturalFeatures_.GetHashCode();
      hash ^= streets_.GetHashCode();
      hash ^= streetIntersections_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (triple_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Triple);
      }
      boundaryPositions_.WriteTo(output, _repeated_boundaryPositions_codec);
      if (MinX != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(MinX);
      }
      if (MaxX != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(MaxX);
      }
      if (MinY != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(MinY);
      }
      if (MaxY != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(MaxY);
      }
      if (startingCameraPos_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(StartingCameraPos);
      }
      boundaryMeshes_.WriteTo(output, _repeated_boundaryMeshes_codec);
      buildings_.WriteTo(output, _repeated_buildings_codec);
      naturalFeatures_.WriteTo(output, _repeated_naturalFeatures_codec);
      streets_.WriteTo(output, _repeated_streets_codec);
      streetIntersections_.WriteTo(output, _repeated_streetIntersections_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (triple_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Triple);
      }
      size += boundaryPositions_.CalculateSize(_repeated_boundaryPositions_codec);
      if (MinX != 0F) {
        size += 1 + 4;
      }
      if (MaxX != 0F) {
        size += 1 + 4;
      }
      if (MinY != 0F) {
        size += 1 + 4;
      }
      if (MaxY != 0F) {
        size += 1 + 4;
      }
      if (startingCameraPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartingCameraPos);
      }
      size += boundaryMeshes_.CalculateSize(_repeated_boundaryMeshes_codec);
      size += buildings_.CalculateSize(_repeated_buildings_codec);
      size += naturalFeatures_.CalculateSize(_repeated_naturalFeatures_codec);
      size += streets_.CalculateSize(_repeated_streets_codec);
      size += streetIntersections_.CalculateSize(_repeated_streetIntersections_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Map other) {
      if (other == null) {
        return;
      }
      if (other.triple_ != null) {
        if (triple_ == null) {
          Triple = new global::Transidious.Serialization.VersionTriple();
        }
        Triple.MergeFrom(other.Triple);
      }
      boundaryPositions_.Add(other.boundaryPositions_);
      if (other.MinX != 0F) {
        MinX = other.MinX;
      }
      if (other.MaxX != 0F) {
        MaxX = other.MaxX;
      }
      if (other.MinY != 0F) {
        MinY = other.MinY;
      }
      if (other.MaxY != 0F) {
        MaxY = other.MaxY;
      }
      if (other.startingCameraPos_ != null) {
        if (startingCameraPos_ == null) {
          StartingCameraPos = new global::Transidious.Serialization.Vector3();
        }
        StartingCameraPos.MergeFrom(other.StartingCameraPos);
      }
      boundaryMeshes_.Add(other.boundaryMeshes_);
      buildings_.Add(other.buildings_);
      naturalFeatures_.Add(other.naturalFeatures_);
      streets_.Add(other.streets_);
      streetIntersections_.Add(other.streetIntersections_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (triple_ == null) {
              Triple = new global::Transidious.Serialization.VersionTriple();
            }
            input.ReadMessage(Triple);
            break;
          }
          case 18: {
            boundaryPositions_.AddEntriesFrom(input, _repeated_boundaryPositions_codec);
            break;
          }
          case 29: {
            MinX = input.ReadFloat();
            break;
          }
          case 37: {
            MaxX = input.ReadFloat();
            break;
          }
          case 45: {
            MinY = input.ReadFloat();
            break;
          }
          case 53: {
            MaxY = input.ReadFloat();
            break;
          }
          case 58: {
            if (startingCameraPos_ == null) {
              StartingCameraPos = new global::Transidious.Serialization.Vector3();
            }
            input.ReadMessage(StartingCameraPos);
            break;
          }
          case 66: {
            boundaryMeshes_.AddEntriesFrom(input, _repeated_boundaryMeshes_codec);
            break;
          }
          case 74: {
            buildings_.AddEntriesFrom(input, _repeated_buildings_codec);
            break;
          }
          case 82: {
            naturalFeatures_.AddEntriesFrom(input, _repeated_naturalFeatures_codec);
            break;
          }
          case 90: {
            streets_.AddEntriesFrom(input, _repeated_streets_codec);
            break;
          }
          case 98: {
            streetIntersections_.AddEntriesFrom(input, _repeated_streetIntersections_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Expense : pb::IMessage<Expense> {
    private static readonly pb::MessageParser<Expense> _parser = new pb::MessageParser<Expense>(() => new Expense());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Expense> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transidious.Serialization.MapReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Expense() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Expense(Expense other) : this() {
      description_ = other.description_;
      amount_ = other.amount_ != null ? other.amount_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Expense Clone() {
      return new Expense(this);
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 1;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private global::Transidious.Serialization.Decimal amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Transidious.Serialization.Decimal Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Expense);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Expense other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Description != other.Description) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Description.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (amount_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Expense other) {
      if (other == null) {
        return;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          Amount = new global::Transidious.Serialization.Decimal();
        }
        Amount.MergeFrom(other.Amount);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            if (amount_ == null) {
              Amount = new global::Transidious.Serialization.Decimal();
            }
            input.ReadMessage(Amount);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Earning : pb::IMessage<Earning> {
    private static readonly pb::MessageParser<Earning> _parser = new pb::MessageParser<Earning>(() => new Earning());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Earning> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transidious.Serialization.MapReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Earning() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Earning(Earning other) : this() {
      description_ = other.description_;
      amount_ = other.amount_ != null ? other.amount_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Earning Clone() {
      return new Earning(this);
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 1;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private global::Transidious.Serialization.Decimal amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Transidious.Serialization.Decimal Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Earning);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Earning other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Description != other.Description) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Description.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (amount_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Earning other) {
      if (other == null) {
        return;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          Amount = new global::Transidious.Serialization.Decimal();
        }
        Amount.MergeFrom(other.Amount);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            if (amount_ == null) {
              Amount = new global::Transidious.Serialization.Decimal();
            }
            input.ReadMessage(Amount);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Finances : pb::IMessage<Finances> {
    private static readonly pb::MessageParser<Finances> _parser = new pb::MessageParser<Finances>(() => new Finances());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Finances> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transidious.Serialization.MapReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Finances() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Finances(Finances other) : this() {
      money_ = other.money_ != null ? other.money_.Clone() : null;
      expenses_ = other.expenses_ != null ? other.expenses_.Clone() : null;
      expenseItems_ = other.expenseItems_.Clone();
      earnings_ = other.earnings_ != null ? other.earnings_.Clone() : null;
      earningItems_ = other.earningItems_.Clone();
      taxes_ = other.taxes_ != null ? other.taxes_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Finances Clone() {
      return new Finances(this);
    }

    /// <summary>Field number for the "money" field.</summary>
    public const int MoneyFieldNumber = 1;
    private global::Transidious.Serialization.Decimal money_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Transidious.Serialization.Decimal Money {
      get { return money_; }
      set {
        money_ = value;
      }
    }

    /// <summary>Field number for the "expenses" field.</summary>
    public const int ExpensesFieldNumber = 2;
    private global::Transidious.Serialization.Decimal expenses_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Transidious.Serialization.Decimal Expenses {
      get { return expenses_; }
      set {
        expenses_ = value;
      }
    }

    /// <summary>Field number for the "expenseItems" field.</summary>
    public const int ExpenseItemsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.Expense> _repeated_expenseItems_codec
        = pb::FieldCodec.ForMessage(26, global::Transidious.Serialization.Expense.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.Expense> expenseItems_ = new pbc::RepeatedField<global::Transidious.Serialization.Expense>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.Expense> ExpenseItems {
      get { return expenseItems_; }
    }

    /// <summary>Field number for the "earnings" field.</summary>
    public const int EarningsFieldNumber = 4;
    private global::Transidious.Serialization.Decimal earnings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Transidious.Serialization.Decimal Earnings {
      get { return earnings_; }
      set {
        earnings_ = value;
      }
    }

    /// <summary>Field number for the "earningItems" field.</summary>
    public const int EarningItemsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.Earning> _repeated_earningItems_codec
        = pb::FieldCodec.ForMessage(42, global::Transidious.Serialization.Earning.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.Earning> earningItems_ = new pbc::RepeatedField<global::Transidious.Serialization.Earning>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.Earning> EarningItems {
      get { return earningItems_; }
    }

    /// <summary>Field number for the "taxes" field.</summary>
    public const int TaxesFieldNumber = 6;
    private global::Transidious.Serialization.Earning taxes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Transidious.Serialization.Earning Taxes {
      get { return taxes_; }
      set {
        taxes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Finances);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Finances other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Money, other.Money)) return false;
      if (!object.Equals(Expenses, other.Expenses)) return false;
      if(!expenseItems_.Equals(other.expenseItems_)) return false;
      if (!object.Equals(Earnings, other.Earnings)) return false;
      if(!earningItems_.Equals(other.earningItems_)) return false;
      if (!object.Equals(Taxes, other.Taxes)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (money_ != null) hash ^= Money.GetHashCode();
      if (expenses_ != null) hash ^= Expenses.GetHashCode();
      hash ^= expenseItems_.GetHashCode();
      if (earnings_ != null) hash ^= Earnings.GetHashCode();
      hash ^= earningItems_.GetHashCode();
      if (taxes_ != null) hash ^= Taxes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (money_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Money);
      }
      if (expenses_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Expenses);
      }
      expenseItems_.WriteTo(output, _repeated_expenseItems_codec);
      if (earnings_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Earnings);
      }
      earningItems_.WriteTo(output, _repeated_earningItems_codec);
      if (taxes_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Taxes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (money_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Money);
      }
      if (expenses_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Expenses);
      }
      size += expenseItems_.CalculateSize(_repeated_expenseItems_codec);
      if (earnings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Earnings);
      }
      size += earningItems_.CalculateSize(_repeated_earningItems_codec);
      if (taxes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Taxes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Finances other) {
      if (other == null) {
        return;
      }
      if (other.money_ != null) {
        if (money_ == null) {
          Money = new global::Transidious.Serialization.Decimal();
        }
        Money.MergeFrom(other.Money);
      }
      if (other.expenses_ != null) {
        if (expenses_ == null) {
          Expenses = new global::Transidious.Serialization.Decimal();
        }
        Expenses.MergeFrom(other.Expenses);
      }
      expenseItems_.Add(other.expenseItems_);
      if (other.earnings_ != null) {
        if (earnings_ == null) {
          Earnings = new global::Transidious.Serialization.Decimal();
        }
        Earnings.MergeFrom(other.Earnings);
      }
      earningItems_.Add(other.earningItems_);
      if (other.taxes_ != null) {
        if (taxes_ == null) {
          Taxes = new global::Transidious.Serialization.Earning();
        }
        Taxes.MergeFrom(other.Taxes);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (money_ == null) {
              Money = new global::Transidious.Serialization.Decimal();
            }
            input.ReadMessage(Money);
            break;
          }
          case 18: {
            if (expenses_ == null) {
              Expenses = new global::Transidious.Serialization.Decimal();
            }
            input.ReadMessage(Expenses);
            break;
          }
          case 26: {
            expenseItems_.AddEntriesFrom(input, _repeated_expenseItems_codec);
            break;
          }
          case 34: {
            if (earnings_ == null) {
              Earnings = new global::Transidious.Serialization.Decimal();
            }
            input.ReadMessage(Earnings);
            break;
          }
          case 42: {
            earningItems_.AddEntriesFrom(input, _repeated_earningItems_codec);
            break;
          }
          case 50: {
            if (taxes_ == null) {
              Taxes = new global::Transidious.Serialization.Earning();
            }
            input.ReadMessage(Taxes);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SaveFile : pb::IMessage<SaveFile> {
    private static readonly pb::MessageParser<SaveFile> _parser = new pb::MessageParser<SaveFile>(() => new SaveFile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SaveFile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transidious.Serialization.MapReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveFile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveFile(SaveFile other) : this() {
      triple_ = other.triple_ != null ? other.triple_.Clone() : null;
      tiles_ = other.tiles_.Clone();
      lines_ = other.lines_.Clone();
      stops_ = other.stops_.Clone();
      routes_ = other.routes_.Clone();
      citiziens_ = other.citiziens_.Clone();
      cars_ = other.cars_.Clone();
      gameTime_ = other.gameTime_;
      finances_ = other.finances_ != null ? other.finances_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveFile Clone() {
      return new SaveFile(this);
    }

    /// <summary>Field number for the "triple" field.</summary>
    public const int TripleFieldNumber = 1;
    private global::Transidious.Serialization.VersionTriple triple_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Transidious.Serialization.VersionTriple Triple {
      get { return triple_; }
      set {
        triple_ = value;
      }
    }

    /// <summary>Field number for the "tiles" field.</summary>
    public const int TilesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.SaveFile.Types.MapTiles> _repeated_tiles_codec
        = pb::FieldCodec.ForMessage(18, global::Transidious.Serialization.SaveFile.Types.MapTiles.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.SaveFile.Types.MapTiles> tiles_ = new pbc::RepeatedField<global::Transidious.Serialization.SaveFile.Types.MapTiles>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.SaveFile.Types.MapTiles> Tiles {
      get { return tiles_; }
    }

    /// <summary>Field number for the "lines" field.</summary>
    public const int LinesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.Line> _repeated_lines_codec
        = pb::FieldCodec.ForMessage(26, global::Transidious.Serialization.Line.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.Line> lines_ = new pbc::RepeatedField<global::Transidious.Serialization.Line>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.Line> Lines {
      get { return lines_; }
    }

    /// <summary>Field number for the "stops" field.</summary>
    public const int StopsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.Stop> _repeated_stops_codec
        = pb::FieldCodec.ForMessage(34, global::Transidious.Serialization.Stop.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.Stop> stops_ = new pbc::RepeatedField<global::Transidious.Serialization.Stop>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.Stop> Stops {
      get { return stops_; }
    }

    /// <summary>Field number for the "routes" field.</summary>
    public const int RoutesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.Route> _repeated_routes_codec
        = pb::FieldCodec.ForMessage(42, global::Transidious.Serialization.Route.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.Route> routes_ = new pbc::RepeatedField<global::Transidious.Serialization.Route>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.Route> Routes {
      get { return routes_; }
    }

    /// <summary>Field number for the "citiziens" field.</summary>
    public const int CitiziensFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.Citizien> _repeated_citiziens_codec
        = pb::FieldCodec.ForMessage(50, global::Transidious.Serialization.Citizien.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.Citizien> citiziens_ = new pbc::RepeatedField<global::Transidious.Serialization.Citizien>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.Citizien> Citiziens {
      get { return citiziens_; }
    }

    /// <summary>Field number for the "cars" field.</summary>
    public const int CarsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Transidious.Serialization.Car> _repeated_cars_codec
        = pb::FieldCodec.ForMessage(58, global::Transidious.Serialization.Car.Parser);
    private readonly pbc::RepeatedField<global::Transidious.Serialization.Car> cars_ = new pbc::RepeatedField<global::Transidious.Serialization.Car>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Transidious.Serialization.Car> Cars {
      get { return cars_; }
    }

    /// <summary>Field number for the "gameTime" field.</summary>
    public const int GameTimeFieldNumber = 8;
    private ulong gameTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong GameTime {
      get { return gameTime_; }
      set {
        gameTime_ = value;
      }
    }

    /// <summary>Field number for the "finances" field.</summary>
    public const int FinancesFieldNumber = 9;
    private global::Transidious.Serialization.Finances finances_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Transidious.Serialization.Finances Finances {
      get { return finances_; }
      set {
        finances_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SaveFile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SaveFile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Triple, other.Triple)) return false;
      if(!tiles_.Equals(other.tiles_)) return false;
      if(!lines_.Equals(other.lines_)) return false;
      if(!stops_.Equals(other.stops_)) return false;
      if(!routes_.Equals(other.routes_)) return false;
      if(!citiziens_.Equals(other.citiziens_)) return false;
      if(!cars_.Equals(other.cars_)) return false;
      if (GameTime != other.GameTime) return false;
      if (!object.Equals(Finances, other.Finances)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (triple_ != null) hash ^= Triple.GetHashCode();
      hash ^= tiles_.GetHashCode();
      hash ^= lines_.GetHashCode();
      hash ^= stops_.GetHashCode();
      hash ^= routes_.GetHashCode();
      hash ^= citiziens_.GetHashCode();
      hash ^= cars_.GetHashCode();
      if (GameTime != 0UL) hash ^= GameTime.GetHashCode();
      if (finances_ != null) hash ^= Finances.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (triple_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Triple);
      }
      tiles_.WriteTo(output, _repeated_tiles_codec);
      lines_.WriteTo(output, _repeated_lines_codec);
      stops_.WriteTo(output, _repeated_stops_codec);
      routes_.WriteTo(output, _repeated_routes_codec);
      citiziens_.WriteTo(output, _repeated_citiziens_codec);
      cars_.WriteTo(output, _repeated_cars_codec);
      if (GameTime != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(GameTime);
      }
      if (finances_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Finances);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (triple_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Triple);
      }
      size += tiles_.CalculateSize(_repeated_tiles_codec);
      size += lines_.CalculateSize(_repeated_lines_codec);
      size += stops_.CalculateSize(_repeated_stops_codec);
      size += routes_.CalculateSize(_repeated_routes_codec);
      size += citiziens_.CalculateSize(_repeated_citiziens_codec);
      size += cars_.CalculateSize(_repeated_cars_codec);
      if (GameTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameTime);
      }
      if (finances_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Finances);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SaveFile other) {
      if (other == null) {
        return;
      }
      if (other.triple_ != null) {
        if (triple_ == null) {
          Triple = new global::Transidious.Serialization.VersionTriple();
        }
        Triple.MergeFrom(other.Triple);
      }
      tiles_.Add(other.tiles_);
      lines_.Add(other.lines_);
      stops_.Add(other.stops_);
      routes_.Add(other.routes_);
      citiziens_.Add(other.citiziens_);
      cars_.Add(other.cars_);
      if (other.GameTime != 0UL) {
        GameTime = other.GameTime;
      }
      if (other.finances_ != null) {
        if (finances_ == null) {
          Finances = new global::Transidious.Serialization.Finances();
        }
        Finances.MergeFrom(other.Finances);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (triple_ == null) {
              Triple = new global::Transidious.Serialization.VersionTriple();
            }
            input.ReadMessage(Triple);
            break;
          }
          case 18: {
            tiles_.AddEntriesFrom(input, _repeated_tiles_codec);
            break;
          }
          case 26: {
            lines_.AddEntriesFrom(input, _repeated_lines_codec);
            break;
          }
          case 34: {
            stops_.AddEntriesFrom(input, _repeated_stops_codec);
            break;
          }
          case 42: {
            routes_.AddEntriesFrom(input, _repeated_routes_codec);
            break;
          }
          case 50: {
            citiziens_.AddEntriesFrom(input, _repeated_citiziens_codec);
            break;
          }
          case 58: {
            cars_.AddEntriesFrom(input, _repeated_cars_codec);
            break;
          }
          case 64: {
            GameTime = input.ReadUInt64();
            break;
          }
          case 74: {
            if (finances_ == null) {
              Finances = new global::Transidious.Serialization.Finances();
            }
            input.ReadMessage(Finances);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SaveFile message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class MapTiles : pb::IMessage<MapTiles> {
        private static readonly pb::MessageParser<MapTiles> _parser = new pb::MessageParser<MapTiles>(() => new MapTiles());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MapTiles> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Transidious.Serialization.SaveFile.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MapTiles() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MapTiles(MapTiles other) : this() {
          tiles_ = other.tiles_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MapTiles Clone() {
          return new MapTiles(this);
        }

        /// <summary>Field number for the "tiles" field.</summary>
        public const int TilesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Transidious.Serialization.MapTile> _repeated_tiles_codec
            = pb::FieldCodec.ForMessage(10, global::Transidious.Serialization.MapTile.Parser);
        private readonly pbc::RepeatedField<global::Transidious.Serialization.MapTile> tiles_ = new pbc::RepeatedField<global::Transidious.Serialization.MapTile>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Transidious.Serialization.MapTile> Tiles {
          get { return tiles_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MapTiles);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MapTiles other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!tiles_.Equals(other.tiles_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= tiles_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          tiles_.WriteTo(output, _repeated_tiles_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += tiles_.CalculateSize(_repeated_tiles_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MapTiles other) {
          if (other == null) {
            return;
          }
          tiles_.Add(other.tiles_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                tiles_.AddEntriesFrom(input, _repeated_tiles_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
