syntax = "proto3";

package Transidious.Serialization;
option csharp_namespace = "Transidious.Serialization";

import "Common.proto";

enum TransitType
{
    /// A bus line.
    Bus = 0;

    /// A tram line.
    Tram = 1;

    /// A subway line.
    Subway = 2;

    /// A regional train line.
    IntercityRail = 3;

    /// A ferry line.
    Ferry = 4;

    /// A light rail line.
    LightRail = 5;
}

message Schedule {
    uint64 firstDeparture = 1;
    float interval = 2;
}

message Line {
    MapObject mapObject = 1;
    TransitType type = 2;
    uint32 depotID = 3;
    repeated uint32 stopIDs = 4;
    repeated uint32 routeIDs = 5;
    Color color = 6;
}

message Stop {
    message StopSchedule {
        uint32 lineID = 1;
        Schedule schedule = 2;
    }
    enum StopType {
        StreetBound = 0;
        AboveGround = 1;
        Underground = 2;
        WaterBound = 3;
    }

    MapObject mapObject = 1;
    Vector2 position = 2;
    repeated uint32 outgoingRouteIDs = 3;
    repeated uint32 routeIDs = 4;
    repeated StopSchedule schedules = 5;
    StopType type = 6;
}

message Route {
    message PathSegmentInfo {
        uint32 segmentID = 1;
        int32 lane = 2;
        int32 offset = 3;
        int32 length = 4;
        bool partialStart = 5;
        bool partialEnd = 6;
        bool backward = 7;
        Vector2 direction = 8;
    }

    message StreetSegmentKey {
        int32 segment = 1;
        int32 lane = 2;
    }

    message StreetSegmentOffsetMapEntry {
        StreetSegmentKey key = 1;
        repeated PathSegmentInfo value = 2;
    }

    message PathSegmentInfoMapEntry {
        uint32 key = 1;
        PathSegmentInfo value = 2;
    }

    MapObject mapObject = 1;

    uint32 lineID = 2;
    repeated Vector2 positions = 3;

    uint32 beginStopID = 4;
    uint32 endStopID = 5;

    float totalTravelTime = 6;
    bool isBackRoute = 7;

    repeated StreetSegmentOffsetMapEntry streetSegmentOffsetMap = 8;
    repeated PathSegmentInfoMapEntry pathSegmentInfoMap = 9;
}